################################# JUST THE CODE ###############################
#INITIALIZE
mkdir /workdir/hh693
cd /workdir/hh693
cp /home/mph75_0001/shared/Hannah/Spisula/MarkerDevelopment/* . &

#BBMAP
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)
export PATH=/programs/bbmap-38.73:$PATH
for SAMPLE in "${SAMPLES[@]}"; do
	echo "$SAMPLE"
	bbduk.sh in1=$SAMPLE'_R1.fastq.gz' in2=$SAMPLE'_R2.fastq.gz' out1=$SAMPLE'_clean_R1.fastq.gz' out2=$SAMPLE'_clean_R2.fastq.gz' ref=/programs/bbmap-38.73/resources/adapters.fa maq=10 ktrim=r k=23 mink=11 hdist=1 tpe tbo >& $SAMPLE'_bbmap.log'
done

#TRINITY POST BBMAP
chmod u+x Trinity_Solidissima.sh
nohup ./Trinity_Solidissima.sh >& Trinity_Sol.log &
chmod u+x Trinity_Similis.sh
nohup ./Trinity_Similis.sh >& Trinity_Sim.log &

#SCRIPT EXAMPLE
TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
TRINITY_OUT=./trinity_out_Similis/
export PATH=/programs/jellyfish-2.2.3/bin:$PATH
export PATH=/programs/salmon-0.11.3/bin:$PATH
export PATH=/programs/bowtie2-2.3.4.3:$PATH
$TRINITY_HOME/Trinity --seqType fq \
--left Sim4_clean_R1.fastq.gz,Sim5_clean_R1.fastq.gz,Sim6_clean_R1.fastq.gz \
--right Sim4_clean_R2.fastq.gz,Sim5_clean_R2.fastq.gz,Sim6_clean_R2.fastq.gz \
--max_memory 10G  \
--CPU 11 \
--output $TRINITY_OUT

#TRIM TRINITY BY ISOFORM SELECTION
# open Trinity.fasta.gene_trans_map in excel
grep ">" trinity_out_Solidissima/Trinity.fasta > sequenceheader_Sol
# open sequenceheader_Sol in excel
# replace len= with nothing
# replace > with nothing
# copy the isoform name and length into the map excel
# make sure isoforms map
# then data > sort, column A (gene) A to Z, column C (length) Largest to Smallest
# all columns and remove duplicates from column A
# save just the list of isoforms as a .txt
makeblastdb -in Trinity.fasta -dbtype nucl -parse_seqids
blastdbcmd -db Trinity.fasta -entry_batch LongestIso_Sol.txt -out Trinity_longiso.fasta

#TRINITY QC
export BUSCO_CONFIG_FILE=/workdir/hh693/config.ini 
export PYTHONPATH=/programs/busco-3.1.0/lib/python3.6/site-packages 
export PATH=/programs/busco-3.1.0/scripts:$PATH 
run_BUSCO.py --in ./Trinity_iso_Sol.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOiso_Solidissima -f >& BUSCO_iso_sol.log &
blastx -query ./Trinity_iso_Sol.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sol_iso.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &
run_BUSCO.py --in ./Trinity_iso_Sol.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 8 --out BUSCOiso_Solidissima_Mollusc -f >& BUSCO_iso_moll_sol.log &
generate_plot.py -wd run_BUSCOiso_Solidissima
export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol_iso.outfmt6 Trinity_iso_Sol.fasta db_ref/uniprot_sprot.fasta
$TRINITY_HOME/util/TrinityStats.pl Trinity_iso_Sol.fasta

#BWA PREPARE REF
#Rename copy
TMP=/workdir/$USER/tmp
GATKDIR=/programs/gatk-4.1.4.0
export PATH=$GATKDIR:$PATH
gatk CreateSequenceDictionary -R Sol_ref.fa  -O Sol_ref.dict
samtools faidx Sol_ref.fa
#Index for BWA alignment
bwa index Sol_ref.fa

#BWA ALIGN
# Basic script code (change ACC):
TMP=/workdir/$USER/tmp
GATKDIR=/programs/gatk-4.1.4.0
export PATH=$GATKDIR:$PATH
ACC=Sol10
SAM=Solidissima
REFFASTA=Sol_ref.fa
bwa mem -t 11  -R "@RG\tID:${ACC}\tSM:${ACC}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA ${ACC}_clean_R1.fastq.gz ${ACC}_clean_R2.fastq.gz | samtools view -Sb -@18 -o ${ACC}_iso_output.bam -

#MARK DUPLICATES
#SWITCH TO OLD JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH
ACC=Sim5
SAM=Solidissima
REFFASTA=Sol_ref.fa
gatk MarkDuplicatesSpark \
-I ${ACC}_iso_output.bam \
-O ${ACC}.sorted.dedup.bam \
-M ${ACC}.sorted.dedup.txt \
--tmp-dir $TMP \
--conf "spark.executor.cores=7" \
>& sortdedup_${ACC}.log &

#LIST OF ALL CHROMOSOMES TO DO BY REGION
grep ">" Sol_ref.fa | awk '{print $1}' | awk '{ print substr($0,2) }' > chr_list.txt

#(ADJUST HEADERS OF BAM FILES) - FIXED ORIGINAL CODE, NOT NEEDED
samtools view -H Sim4.sorted.dedup.bam | grep "@SQ" | less
samtools view -H Sim4.sorted.dedup.bam | grep -v "@SQ" | less

#FREEBAYES
FB=/programs/freebayes-v1.3.1/freebayes
REFFASTA=Sol_ref.fa
REGION=TRINITY_DN100_c0_g1_i11
$FB -f $REFFASTA \
Sim4.sorted.dedup.bam \
Sim5.sorted.dedup.bam \
Sim6.sorted.dedup.bam \
Sol6.sorted.dedup.bam \
Sol7.sorted.dedup.bam \
Sol8.sorted.dedup.bam \
Sol10.sorted.dedup.bam \
--min-mapping-quality 30 \
-r $REGION > fb_$REGION.vcf >& fb_$REGION.log &
#JOB LIST OVER ALL CONTIGS IN chr_list.txt

#COMBINE
#Header
grep "#" fb_TRINITY_DN100_c0_g1_i11.log | cat >> output.vcf 
#Then everybody else
grep -v "#" fb_TRINITY_DN1001*.log | cat >> output.vcf
#First do ten of them
#Don't forget the \ around internal quotes
for i in {0..9}
do
echo "echo $i"
echo "touch fb_vcf/output_DN$i.vcf"
echo "grep \"#\" fb_vcf/fb_TRINITY_DN0_c2_g1_i1.vcf | cat >> fb_vcf/output_DN$i.vcf"
echo "grep -v \"#\" fb_vcf/fb_TRINITY_DN$i*.vcf | cat >> fb_vcf/output_DN$i.vcf"
done > j_combine_fb_vcf.txt
#Checked to make sure they had all finished by doing tail -300+ to make sure there were 9s
#All in one
touch output_all.vcf
grep \"#\" output_DN1.vcf | cat >> output_all.vcf
grep -v \"#\" output_DN*.vcf | cat >> output_all.vcf
#FIX TEN TEN HEADER LINES
cat -n output_DN_all.vcf | sort -uk2 | sort -n | cut -f2- > output_DN_lesshead.vcf

#FILTER BY...
#1/1 AND 0/0 NO 0/1
#This filtering also removes instances of missing data
#Sorted for both
#grep "#" output_DN_lesshead.vcf > output_filter_1100.vcf
#Filtered one at a time to track which matches ref
grep "#" output_DN_lesshead.vcf > o_filter_Sim1_Sol0.vcf
grep "#" output_DN_lesshead.vcf > o_filter_Sim0_Sol1.vcf
#include BEGIN to print as \t delimited
awk 'BEGIN{FS=OFS="\t"}{if(\
$10 ~ "0/0" &&\
$12 ~ "0/0" &&\
$15 ~ "0/0" &&\
$16 ~ "0/0" &&\
$11 ~ "1/1" &&\
$13 ~ "1/1" &&\
$14 ~ "1/1"\
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' output_DN_all.vcf >> o_filter_Sim1_Sol0.vcf &
awk 'BEGIN{FS=OFS="\t"}{if(\
$10 ~ "1/1" &&\
$12 ~ "1/1" &&\
$15 ~ "1/1" &&\
$16 ~ "1/1" &&\
$11 ~ "0/0" &&\
$13 ~ "0/0" &&\
$14 ~ "0/0"\
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' output_DN_all.vcf >>  o_filter_Sim0_Sol1.vcf &

#QUALITY

#DEPTH

#DISTANCE FROM INDELS - may not need because indels could work for rflp











########################################### NOTES ####################################
#STARTING OVER AGAIN - JUNE 2020 and JULY
#RawReads directory in Spisula folder


#INITIALIZE
mkdir /workdir/hh693
cd /workdir/hh693
cp /home/mph75_0001/shared/Hannah/Spisula/MarkerDevelopment/* . &



#FASTQC
#FOR ORIGINALS AND TRIMMED



#BBMAP
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)
export PATH=/programs/bbmap-38.73:$PATH

for SAMPLE in "${SAMPLES[@]}"; do
	echo "$SAMPLE"
	bbduk.sh in1=$SAMPLE'_R1.fastq.gz' in2=$SAMPLE'_R2.fastq.gz' out1=$SAMPLE'_clean_R1.fastq.gz' out2=$SAMPLE'_clean_R2.fastq.gz' ref=/programs/bbmap-38.73/resources/adapters.fa maq=10 ktrim=r k=23 mink=11 hdist=1 tpe tbo >& $SAMPLE'_bbmap.log'
done

#Pieces I want:
#Adapter trimming
#	ktrim=r k=23 mink=11 hdist=1 tpe tbo
#Mapping Quality
#	maq=10
#Minimum Length (maybe)
#	qtrim=r trimq=10 minlen=50
#Histogram Generate (maybe)
#	bhist=bhist.txt qhist=qhist.txt gchist=gchist.txt aqhist=aqhist.txt lhist=lhist.txt gcbins=auto
#Trims about 0.5% of bases/reads - could be more stringent but it works and is eliminating without 



#TRINITY POST BBMAP
#Edit the comments out of the script (SpisulaTrinity.sh), Similis vs Solidissima
chmod u+x Trinity_Solidissima.sh
nohup ./Trinity_Solidissima.sh >& Trinity_Sol.log &

chmod u+x Trinity_Similis.sh
nohup ./Trinity_Similis.sh >& Trinity_Sim.log &

tail -f Trinity_Sol.log



#TRINITY QC
#BUSCO
cp /programs/busco-3.1.0/config/config.ini ./ 
export BUSCO_CONFIG_FILE=/workdir/hh693/config.ini 
export PYTHONPATH=/programs/busco-3.1.0/lib/python3.6/site-packages 
export PATH=/programs/busco-3.1.0/scripts:$PATH 
tar xvfz metazoa_odb10.tar.gz 

run_BUSCO.py --in ./Trinity_Solidissima.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out trinityBUSCO_Solidissima -f >& BUSCO_log_sol.log &
run_BUSCO.py --in ./Trinity_Similis.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out trinityBUSCO_Similis -f >& BUSCO_log_sim.log &


#!/usr/local/bin/python2.7.15
generate_plot.py -wd run_trinityBUSCO_Solidissima
generate_plot.py -wd run_trinityBUSCO_Similis
#If that doesnt work: generate_plot.py -wd run_trinityBUSCO
#graph still not working

#BUSCO WITH MOLLUSCA
run_BUSCO.py --in ./Trinity_Solidissima.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 12 --out mollusca_Solidissima -f >& logs/BUSCO_mollusca_sol_t2.log &
run_BUSCO.py --in ./Trinity_Similis.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 12 --out mollusca_Similis -f >& logs/BUSCO_mollucsa_sim_t2.log &
#DID NOT WORK
generate_plot.py -wd run_BUSCOmollusca_Solidissima &
generate_plot.py -wd run_BUSCOmollusca_Similis &

#BLASTX 
makeblastdb -in uniprot_sprot.fasta -dbtype prot
blastx -query ./trinity_out_Solidissima/Trinity.fasta -db uniprot_sprot.fasta -out blastx_Sol.outfmt6 -evalue 1e-20 -num_threads 8 -max_target_seqs 1 -outfmt 6 &
blastx -query ./trinity_out_Similis/Trinity.fasta -db uniprot_sprot.fasta -out blastx_sim.outfmt6 -evalue 1e-20 -num_threads 8 -max_target_seqs 1 -outfmt 6 &

export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol.outfmt6 Trinity_Solidissima.fasta db_ref/uniprot_sprot.fasta
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_sim.outfmt6 Trinity_Similis.fasta db_ref/uniprot_sprot.fasta

#GENERAL STATS
export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/TrinityStats.pl Trinity_Similis.fasta
$TRINITY_HOME/util/TrinityStats.pl Trinity_Solidissima.fasta



#TRIM TRINITY
#ISOFORM SELECTION
# open Trinity.fasta.gene_trans_map in excel

grep ">" trinity_out_Solidissima/Trinity.fasta > sequenceheader_Sol

# open sequenceheader_Sol in excel
# replace len= with nothing
# replace > with nothing
# copy the isoform name and length into the map excel
# make sure isoforms map
# then data > sort, column A (gene) A to Z, column C (length) Largest to Smallest
# all columns and remove duplicates from column A
# save just the list of isoforms as a .txt

makeblastdb -in Trinity.fasta -dbtype nucl -parse_seqids
blastdbcmd -db Trinity.fasta -entry_batch LongestIso_Sol.txt -out Trinity_longiso.fasta


#REPEAT QC WITH ISOFORM TRIMMED
export BUSCO_CONFIG_FILE=/workdir/hh693/config.ini 
export PYTHONPATH=/programs/busco-3.1.0/lib/python3.6/site-packages 
export PATH=/programs/busco-3.1.0/scripts:$PATH 
run_BUSCO.py --in ./Trinity_iso_Sol.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOiso_Solidissima -f >& BUSCO_iso_sol.log &
blastx -query ./Trinity_iso_Sol.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sol_iso.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &

run_BUSCO.py --in ./Trinity_iso_Sol.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 8 --out BUSCOiso_Solidissima_Mollusc -f >& BUSCO_iso_moll_sol.log &

generate_plot.py -wd run_BUSCOiso_Solidissima

export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol_iso.outfmt6 Trinity_iso_Sol.fasta db_ref/uniprot_sprot.fasta
$TRINITY_HOME/util/TrinityStats.pl Trinity_iso_Sol.fasta



#CHOOSE REFERENCE
#Solidissima to keep code the same, even though isoformed, Sim is likely marginally better



#BWA PREPARE REF
#Rename and move if need be.
TMP=/workdir/$USER/tmp
GATKDIR=/programs/gatk-4.1.4.0
export PATH=$GATKDIR:$PATH
gatk CreateSequenceDictionary -R Sol_ref.fa  -O Sol_ref.dict
samtools faidx Sol_ref.fa
#Index for BWA alignment
bwa index Sol_ref.fa



#BWA ALIGN

# Basic script code (running it without script for now):
TMP=/workdir/$USER/tmp
GATKDIR=/programs/gatk-4.1.4.0
export PATH=$GATKDIR:$PATH
ACC=Sol10
SAM=Solidissima
REFFASTA=Sol_ref.fa

bwa mem -t 11  -R "@RG\tID:${ACC}\tSM:${ACC}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA ${ACC}_R1.fastq.gz ${ACC}_R2.fastq.gz | samtools view -Sb -@18 -o ${ACC}_iso_output.bam -



#MARK DUPLICATES
#SWITCH TO OLD JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH

GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

ACC=Sim5
SAM=Solidissima
REFFASTA=Sol_ref.fa

gatk MarkDuplicatesSpark \
-I ${ACC}_iso_output.bam \
-O ${ACC}.sorted.dedup.bam \
-M ${ACC}.sorted.dedup.txt \
--tmp-dir $TMP \
--conf "spark.executor.cores=7" \
>& sortdedup_${ACC}.log &



#HAPLOTYPE CALLER
#HAPLOTYPE CALL INDIVIDUALLY

#INITIALIZE JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
REFFASTA=./Sol_ref.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

ACCB=Sim4

gatk --java-options "-Xmx4g"  HaplotypeCaller \
    --tmp-dir $TMP \
     -R $REFFASTA \
     -I $ACCB.sorted.dedup.bam  \
     -ERC GVCF \
     --native-pair-hmm-threads 4 \
     --minimum-mapping-quality 30 \
     -O $ACCB_4.g.vcf >& hc4_$ACCB.log &



#PARALELIZATION

samtools view -h Sim4_iso_output.bam | grep "@SQ" | less
118827
less Sim4_chromosomename | awk '{print $2}' > Sim4_chromosomename.txt

Sim4_chromosomename.txt
118827
000000
 10000
 
awk 'NR>=1&&NR<=10000' Sim4_chromosomename > Sim4_chrA.txt &
awk 'NR>=10000&&NR<=20000' Sim4_chromosomename > Sim4_chrB.txt &
awk 'NR>=20000&&NR<=30000' Sim4_chromosomename > Sim4_chrC.txt &
awk 'NR>=30000&&NR<=40000' Sim4_chromosomename > Sim4_chrD.txt &
awk 'NR>=40000&&NR<=50000' Sim4_chromosomename > Sim4_chrE.txt &
awk 'NR>=50000&&NR<=60000' Sim4_chromosomename > Sim4_chrF.txt &
awk 'NR>=60000&&NR<=70000' Sim4_chromosomename > Sim4_chrG.txt &
awk 'NR>=70000&&NR<=80000' Sim4_chromosomename > Sim4_chrH.txt &
awk 'NR>=80000&&NR<=90000' Sim4_chromosomename > Sim4_chrI.txt &
awk 'NR>=90000&&NR<=100000' Sim4_chromosomename > Sim4_chrJ.txt &
awk 'NR>=100000&&NR<=110000' Sim4_chromosomename > Sim4_chrK.txt &
awk 'NR>=110000&&NR<=118827' Sim4_chromosomename > Sim4_chrL.txt &


trinity_out_Solidissima/Trinity.fasta > sequenceheader_Sol


java -jar /programs/picard-tools-2.19.2/picard.jar FilterSamReads I=Sim4_iso_output.bam O=Sim4_chrA.bam READ_LIST_FILE=Sim4_chrA.txt FILTER=includeReadList &
#Took about 13 minutes


LETTERS=(
A
B
C
D
E
F
G
H
I
J
K
L
)
for i in "${LETTERS[@]}"; do
	echo "$i"
	java -jar /programs/picard-tools-2.19.2/picard.jar FilterSamReads I=Sim4.sorted.dedup.bam O='Sim4_chr'$i'.sorted.bam' READ_LIST_FILE='Sim4_chr'$i'.txt' FILTER=includeReadList &
done

#Super fast
parallel samtools index ::: *chr*sorted.bam

export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
REFFASTA=./Sol_ref.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

ACCB=Sim4
i=A
echo 'Sim4_chr'$i'.sorted.bam'

gatk --java-options "-Xmx4g"  HaplotypeCaller \
    --tmp-dir $TMP \
     -R $REFFASTA \
     -I 'Sim4_chr'$i'.sorted.bam'  \
     -ERC GVCF \
     --native-pair-hmm-threads 2 \
     --minimum-mapping-quality 30 \
     -O 'Sim4.chr'$i'.g.vcf' >& 'hc2_Sim4_chr'$i'.log' &


touch j_haplotypecall.txt

for i in "${LETTERS[@]}"; do
	echo "gatk --java-options "-Xmx4g"  HaplotypeCaller --tmp-dir $TMP -R $REFFASTA -I 'Sim4_chr'$i'.sorted.bam' -ERC GVCF --native-pair-hmm-threads 2 --minimum-mapping-quality 30 -O 'Sim4.chr'$i'.g.vcf' >& 'hc2_Sim4_chr'$i'.log' &" >> j_haplotypecall.txt
done

parallel -j 10 < j_haplotypecall.txt


#COMBINE GVCF
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
REFFASTA=./Sol_ref.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

# the gVCFG files obtained before need to be combined to be used with GenotypeGVCFs tool

echo Combining GVCFs started 
date

gatk CombineGVCFs \
     --tmp-dir $TMP \
     -R $REFFASTA \
     --variant Sim4.chrA.g.vcf \
     --variant Sim4.chrB.g.vcf \
     --variant Sim4.chrC.g.vcf \
     --variant Sim4.chrD.g.vcf \
     --variant Sim4.chrE.g.vcf \
     --variant Sim4.chrF.g.vcf \
     --variant Sim4.chrG.g.vcf \
     --variant Sim4.chrH.g.vcf \
     --variant Sim4.chrI.g.vcf \
     --variant Sim4.chrJ.g.vcf \
     --variant Sim4.chrK.g.vcf \
     --variant Sim4.chrL.g.vcf \
     -O Sim4_chr.g.vcf  >& all_Sim4_bychr_vcf.log &

cat Sim4.chrA.g.vcf Sim4.chrB.g.vcf Sim4.chrC.g.vcf Sim4.chrD.g.vcf Sim4.chrE.g.vcf Sim4.chrF.g.vcf Sim4.chrG.g.vcf Sim4.chrH.g.vcf Sim4.chrI.g.vcf Sim4.chrJ.g.vcf Sim4.chrK.g.vcf Sim4.chrL.g.vcf > Sim4_chr_cat.g.vcf

echo Run ended
date

#LIST OF ALL CHROMOSOMES TO DO GVCF BY REGION
grep ">" Sol_ref.fa | awk '{print $1}' | awk '{ print substr($0,2) }' > chr_list.txt

export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

rm j_combinegvcf.txt
touch j_combinegvcf.txt
COUNTER=0

while read REGION; do
echo $REGION
COUNTER=$[COUNTER + 1]
i=A
if [ $COUNTER -ge 10000 ]; then
i=B
fi
if [ $COUNTER -ge 20000 ]; then
i=C
fi
if [ $COUNTER -ge 30000 ]; then
i=D
fi
if [ $COUNTER -ge 40000 ]; then
i=E
fi
if [ $COUNTER -ge 50000 ]; then
i=F
fi
if [ $COUNTER -ge 60000 ]; then
i=G
fi
if [ $COUNTER -ge 70000 ]; then
i=H
fi
if [ $COUNTER -ge 80000 ]; then
i=I
fi
if [ $COUNTER -ge 90000 ]; then
i=J
fi
if [ $COUNTER -ge 100000 ]; then
i=K
fi
if [ $COUNTER -ge 110000 ]; then
i=L
fi
echo "gatk CombineGVCFs --tmp-dir $TMP -R Sol_ref.fa -L $REGION --variant Sim4.chr'$i'.g.vcf --variant Sim5.g.vcf --variant Sim6.g.vcf --variant Sol6.g.vcf --variant Sol7.g.vcf --variant Sol8.g.vcf --variant Sol10.g.vcf -O vcf_by_chr/'combine'_$REGION'.g.vcf' >& logs/'combinegcvf_chr_'$REGION'.log' " >> j_combinegvcf.txt
done < chr_list.txt


head -5 j_combinegvcf.txt > j_combine_head.txt
parallel -j 3 < j_combine_head.txt


gatk CombineGVCFs --tmp-dir $TMP -R Sol_ref.fa --variant Sim4_chr_cat.g.vcf --variant Sim5.g.vcf --variant Sim6.g.vcf --variant Sol6.g.vcf --variant Sol7.g.vcf --variant Sol8.g.vcf --variant Sol10.g.vcf -O ALL.g.vcf >& logs/ALL_combine.log &
1219


#RE-INDEX THE g.VCFs
bgzip mySample1.g.vcf
tabix mySample1.g.vcf.gz

bgzip < Sim4.g.vcf > Sim4.g.vcf.gz &
bgzip < Sim5.g.vcf > Sim5.g.vcf.gz &
bgzip < Sim6.g.vcf > Sim6.g.vcf.gz &
bgzip < Sol6.g.vcf > Sol6.g.vcf.gz &
bgzip < Sol7.g.vcf > Sol7.g.vcf.gz &
bgzip < Sol8.g.vcf > Sol8.g.vcf.gz &
bgzip < Sol10.g.vcf > Sol10.g.vcf.gz &

tabix Sim4.g.vcf.gz &
tabix Sim5.g.vcf.gz &
tabix Sim6.g.vcf.gz &
tabix Sol6.g.vcf.gz &
tabix Sol7.g.vcf.gz &
tabix Sol8.g.vcf.gz &
tabix Sol10.g.vcf.gz &

#Produces .tbi file


#Combine g VCF
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp2
export PATH=$GATKDIR:$PATH
REFFASTA=Sol_ref.fa
gatk CombineGVCFs --tmp-dir $TMP -R $REFFASTA --variant Sim4.g.vcf.gz --variant Sim5.g.vcf.gz --variant Sim6.g.vcf.gz --variant Sol6.g.vcf.gz --variant Sol7.g.vcf.gz --variant Sol8.g.vcf.gz --variant Sol10.g.vcf.gz -O all.g.vcf.gz >& combine_g.log

#Combine by region
REGION=TRINITY_DN0_c0_g1_i13
gatk CombineGVCFs --tmp-dir $TMP -R $REFFASTA -L $REGION --variant Sim4.g.vcf.gz --variant Sim5.g.vcf.gz --variant Sim6.g.vcf.gz --variant Sol6.g.vcf.gz --variant Sol7.g.vcf.gz --variant Sol8.g.vcf.gz --variant Sol10.g.vcf.gz -O all_$REGION.g.vcf.gz >& combine_$REGION.log


export PATH=/programs/bcftools-1.9/bin:$PATH
CHR=TRINITY_DN0_c0_g2_i1
bcftools view -r $CHR Sim4.g.vcf.gz -O z -o Sim4.$CHR.g.vcf.gz
bcftools view -r $CHR Sim5.g.vcf.gz -O z -o Sim5.$CHR.g.vcf.gz
bcftools view -r $CHR Sim6.g.vcf.gz -O z -o Sim6.$CHR.g.vcf.gz
bcftools view -r $CHR Sol6.g.vcf.gz -O z -o Sol6.$CHR.g.vcf.gz
bcftools view -r $CHR Sol7.g.vcf.gz -O z -o Sol7.$CHR.g.vcf.gz
bcftools view -r $CHR Sol8.g.vcf.gz -O z -o Sol8.$CHR.g.vcf.gz
bcftools view -r $CHR Sol10.g.vcf.gz -O z -o Sol10.$CHR.g.vcf.gz

tabix Sim4.$CHR.g.vcf.gz &
tabix Sim5.$CHR.g.vcf.gz &
tabix Sim6.$CHR.g.vcf.gz &
tabix Sol6.$CHR.g.vcf.gz &
tabix Sol7.$CHR.g.vcf.gz &
tabix Sol8.$CHR.g.vcf.gz &
tabix Sol10.$CHR.g.vcf.gz &

gatk CombineGVCFs --tmp-dir $TMP -R $REFFASTA --variant Sim4.$CHR.g.vcf.gz --variant Sim5.$CHR.g.vcf.gz --variant Sim6.$CHR.g.vcf.gz --variant Sol6.$CHR.g.vcf.gz --variant Sol7.$CHR.g.vcf.gz --variant Sol8.$CHR.g.vcf.gz --variant Sol10.$CHR.g.vcf.gz -O all_$CHR.g.vcf.gz >& combine_gz_$CHR.log




gatk CombineGVCFs --tmp-dir $TMP -R $REFFASTA --variant Sim4.$CHR.g.vcf --variant Sim5.$CHR.g.vcf --variant Sim6.$CHR.g.vcf --variant Sol6.$CHR.g.vcf --variant Sol7.$CHR.g.vcf --variant Sol8.$CHR.g.vcf --variant Sol10.$CHR.g.vcf -O all.$CHR.g.vcf >& combine_g.$CHR.log



#DataBase
gatk --java-options "-Xmx4g -Xms4g" GenomicsDBImport \
      -V Sim4.g.vcf.gz \
      -V Sim5.g.vcf.gz \
      -V Sim6.g.vcf.gz \
      -V Sol8.g.vcf.gz \
      -V Sol7.g.vcf.gz \
      -V Sol6.g.vcf.gz \
      -V Sol10.g.vcf.gz \
      --genomicsdb-workspace-path spisula_db \
      --tmp-dir=tmp2 \
      -L 20

#Change headers so sample names are different
#What if that is the problem
#RENAME

bcftools reheader --help


SAMPLE=Sol7
echo "Solidissima Sim5" > samplename.txt
bcftools reheader -s samplename.txt Sim5.g.vcf.gz -o Sim5_r.g.vcf.gz
bcftools query -l Sim5_r.g.vcf.gz 



bcftools reheader -s samplename.txt Sol10.g.vcf.gz -o Sol10_r.g.vcf.gz



tabix Sim4_r.g.vcf.gz &
tabix Sim5_r.g.vcf.gz &
tabix Sim6_r.g.vcf.gz &
tabix Sol6_r.g.vcf.gz &
tabix Sol7_r.g.vcf.gz &
tabix Sol8_r.g.vcf.gz &
tabix Sol10_r.g.vcf.gz &


gatk --java-options "-Xmx4g -Xms4g" GenomicsDBImport -V Sim4_r.g.vcf.gz -V Sim5_r.g.vcf.gz -V Sim6_r.g.vcf.gz -V Sol8_r.g.vcf.gz -V Sol7_r.g.vcf.gz -V Sol6_r.g.vcf.gz -V Sol10_r.g.vcf.gz --genomicsdb-workspace-path spisula_db --tmp-dir=tmp2 -L20
#NOT WORKING NEED L for INDEX but L=20 default doesn't work



GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp2
export PATH=$GATKDIR:$PATH
REFFASTA=Sol_ref.fa
CHR=TRINITY_DN10_c1_g1_i7
gatk CombineGVCFs --tmp-dir $TMP -R $REFFASTA -L $CHR --variant Sim4_r.g.vcf.gz --variant Sim5_r.g.vcf.gz --variant Sim6_r.g.vcf.gz --variant Sol6_r.g.vcf.gz --variant Sol7_r.g.vcf.gz --variant Sol8_r.g.vcf.gz --variant Sol10_r.g.vcf.gz -O all_$CHR.g.vcf.gz >& combine_$CHR.log

gunzip -c Sim4_r.g.vcf.gz > Sim4_r.g.vcf
gunzip -c Sim5_r.g.vcf.gz > Sim5_r.g.vcf &
gunzip -c Sim6_r.g.vcf.gz > Sim6_r.g.vcf &
gunzip -c Sol6_r.g.vcf.gz > Sol6_r.g.vcf &
gunzip -c Sol7_r.g.vcf.gz > Sol7_r.g.vcf &
gunzip -c Sol8_r.g.vcf.gz > Sol8_r.g.vcf &
gunzip -c Sol10_r.g.vcf.gz > Sol10_r.g.vcf &

gatk IndexFeatureFile -F Sol10_r.g.vcf &


#Adjust headers
#OR
#FreeBayes

FB=/programs/freebayes-v1.3.1/freebayes

REFFASTA=./genome/genome.fa

echo Started at
date
$FB -f $REFFASTA \
SRR1663608.sorted.dedup.bam \
SRR1663609.sorted.dedup.bam \
SRR1663610.sorted.dedup.bam \
SRR1663611.sorted.dedup.bam \
--min-mapping-quality 30 \
-r chr2R > fb.vcf
echo Completed at
date


#ADJUST HEADERS OF BAM FILES
samtools view -H Sim4.sorted.dedup.bam | grep "@SQ" | less
samtools view -H Sim4.sorted.dedup.bam | grep -v "@SQ" | less

FB=/programs/freebayes-v1.3.1/freebayes
REFFASTA=Sol_ref.fa
REGION=TRINITY_DN100_c0_g1_i11

$FB -f $REFFASTA \
Sim4.sorted.dedup.bam \
Sim5.sorted.dedup.bam \
Sim6.sorted.dedup.bam \
Sol6.sorted.dedup.bam \
Sol7.sorted.dedup.bam \
Sol8.sorted.dedup.bam \
Sol10.sorted.dedup.bam \
--min-mapping-quality 30 \
-r $REGION > fb_$REGION.vcf >& fb_$REGION.log &

TY_DN100_c0_g1_i11 2       .       C       A       6.55747e-14     .       AB=0;ABP=0;AC=0;AF=0;AN=2;AO=5;CIGAR=1X;DP=55;DPB=55;DPRA=0;EPP=6.91895;EPPR=5.18177;GTI=0;LEN=1;MEANALT=2;MQM=40.4;MQMR=39.9184;NS=1;NUMALT=1;ODDS=37.5659;PAIRED=0.2;PAIREDR=0.367347;PAO=0;PQA=0;PQR=0;PRO=0;QA=176;QR=1678;RO=49;RPL=0;RPP=13.8677;RPPR=109.412;RPR=5;RUN=1;SAF=1;SAP=6.91895;SAR=4;SRF=21;SRP=5.18177;SRR=28;TYPE=snp;technology.ILLUMINA=1        GT:DP:AD:RO:QR:AO:QA:GL 0/0:55:49,5:49:1678:5:176:0,-1.44155,-125.602

@HD     VN:1.6  GO:none SO:coordinate
@RG     ID:Sim4 SM:Sim4  LB:Solidissima  PL:ILLUMINA
@PG     ID:bwa  PN:bwa  VN:0.7.17-r1188 CL:bwa mem -t 18 -R @RG\tID:Sim4\tSM:Sim4\tLB:Solidissima\tPL:ILLUMINA Sol_ref.fa Sim4_R1.fastq.gz Sim4_R2.fastq.gz

#Replace header
samtools view Sim4.sorted.dedup.bam


SM:Sim4
SM:Solidissima

SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)

for SAMPLE in "${SAMPLES[@]}"; do

for SAMPLE in "${SAMPLES[@]}"
do
	 BAM=$SAMPLE.sorted.dedup.bam
     samtools view -H $BAM > header.sam
     sed "s/SM:Solidissima/SM:$SAMPLE/" header.sam > header_corrected.sam
     samtools reheader  header_corrected.sam $BAM
done


for SAMPLE in "${SAMPLES[@]}"
do
samtools view -H $BAM | sed "s/Solid5500XL/Solid/" | samtools reheader - $BAM
done

for SAMPLE in "${SAMPLES[@]}"
do
samtools view -h $SAMPLE.sd.sam | sed "s/SM:Solidissima/SM:$SAMPLE/" > 
done


#Try converting to sam first
samtools view -h Sol10.sorted.dedup.bam > Sol10.sd.sam &
samtools view -h Sol6.sorted.dedup.bam > Sol6.sd.sam &
samtools view -h Sol7.sorted.dedup.bam > Sol7.sd.sam &
samtools view -h Sol8.sorted.dedup.bam > Sol8.sd.sam &
samtools view -h Sim6.sorted.dedup.bam > Sim6.sd.sam &
samtools view -h Sim5.sorted.dedup.bam > Sim5.sd.sam &
samtools view -h Sim4.sorted.dedup.bam > Sim4.sd.sam &

for SAMPLE in "${SAMPLES[@]}"
do
echo "samtools view -h $SAMPLE.sd.sam | sed "s/SM:Solidissima/SM:$SAMPLE/" | samtools view -S -b -o $SAMPLE.sd.bam"
done

for SAMPLE in "${SAMPLES[@]}"
do
echo "samtools index -@ 3 $SAMPLE.sd.bam"
done

#Job list over night

samtools view -h Sim4.sd.sam | sed s/SM:Solidissima/SM:Sim4/ | samtools view -S -b -o Sim4.sd.bam
samtools view -h Sim5.sd.sam | sed s/SM:Solidissima/SM:Sim5/ | samtools view -S -b -o Sim5.sd.bam
samtools view -h Sim6.sd.sam | sed s/SM:Solidissima/SM:Sim6/ | samtools view -S -b -o Sim6.sd.bam
samtools view -h Sol10.sd.sam | sed s/SM:Solidissima/SM:Sol10/ | samtools view -S -b -o Sol10.sd.bam
samtools view -h Sol8.sd.sam | sed s/SM:Solidissima/SM:Sol8/ | samtools view -S -b -o Sol8.sd.bam
samtools view -h Sol7.sd.sam | sed s/SM:Solidissima/SM:Sol7/ | samtools view -S -b -o Sol7.sd.bam
samtools view -h Sol6.sd.sam | sed s/SM:Solidissima/SM:Sol6/ | samtools view -S -b -o Sol6.sd.bam
samtools index -@ 3 Sim4.sd.bam
samtools index -@ 3 Sim5.sd.bam
samtools index -@ 3 Sim6.sd.bam
samtools index -@ 3 Sol10.sd.bam
samtools index -@ 3 Sol8.sd.bam
samtools index -@ 3 Sol7.sd.bam
samtools index -@ 3 Sol6.sd.bam
wait
FB=/programs/freebayes-v1.3.1/freebayes
REFFASTA=Sol_ref.fa
REGION=TRINITY_DN1001_c11_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.log &
REGION=TRINITY_DN100100_c0_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.txt &
REGION=TRINITY_DN100111_c0_g1_i1
$FB -f $REFFASTA Sim4.qsd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.log &
REGION=TRINITY_DN100111_c1_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.vcf >& fb_$REGION.log &
REGION=TRINITY_DN100111_c2_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.vcf >& fb_$REGION.log &
REGION=TRINITY_DN100111_c3_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.vcf >& fb_$REGION.log &
REGION=TRINITY_DN100111_c4_g1_i1
$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_$REGION.vcf >& fb_$REGION.log &

parallel -j4 < j_samHead_to_bam.txt

for REGION in "${SAMPLES[@]}"
do
echo "samtools index -@ 3 $SAMPLE.sd.bam"
done

while read REGION; do
  echo "echo $REGION"
  echo "$FB -f $REFFASTA Sim4.sd.bam Sim5.sd.bam Sim6.sd.bam Sol6.sd.bam Sol7.sd.bam Sol8.sd.bam Sol10.sd.bam --min-mapping-quality 30 -r $REGION > fb_vcf/fb_$REGION.vcf"
done <chr_list.txt > j_fb_contig.txt


parallel -j20 < j_fb_contig.txt


#CONCATENATE THEM TOGETHER
touch output.vcf
#One with header
cat fb_TRINITY_DN100_c0_g1_i11.log >> output.vcf  
#OR
grep "#" fb_TRINITY_DN100_c0_g1_i11.log | cat >> output.vcf 
#Then everybody else
grep -v "#" fb_TRINITY_DN1001*.log | cat >> output.vcf

#Looks good, make sure wc is good and that all the collumns are in the same order
23+18+186 = 227 CHECK
#Random sample across all fb_vcf indicates they are all in the same order.

#First do ten of them
#Don't forget the \ around internal quotes
for i in {0..9}
do
echo "echo $i"
echo "touch fb_vcf/output_DN$i.vcf"
echo "grep \"#\" fb_vcf/fb_TRINITY_DN0_c2_g1_i1.vcf | cat >> fb_vcf/output_DN$i.vcf"
echo "grep -v \"#\" fb_vcf/fb_TRINITY_DN$i*.vcf | cat >> fb_vcf/output_DN$i.vcf"
done > j_combine_fb_vcf.txt

screen
parallel -j16 < j_combine_fb_vcf.txt

#Checked to make sure they had all finished by doing tail -300+ to make sure there were 9s

#All in one
touch output_all.vcf
grep \"#\" output_DN1.vcf | cat >> output_all.vcf
grep -v \"#\" output_DN*.vcf | cat >> output_all.vcf



#FILTERING
#
grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | less
grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | head | less
#
grep -v "##" output_DN0.vcf | awk '{ {print $1} }' | less
grep -v "#" output_DN0.vcf | awk '{ {print $6} }' | sort -nrk1,1 | head -1


nohup ./scripts/filter_vcf.sh output_DN0 >& filter_vcf.log &
#Filtered everything - might be gatk vs freebayes difference
awk '{if($7=="PASS") print}' all.filtered.vcf | wc -l

#awk, starts with
grep -v "##" output_DN0.vcf | awk '{if($10 ~ "1/1") {print $10} }' | less

#Which ones need to match?
Sol10 = 10			Sim5 = 11
Sol7 = 12			Sim4 = 13
Sol6 = 15			Sim6 = 14
Sol8 = 16

grep -v "##" output_DN0.vcf | awk '{if(\
$10 ~ "0/0" &&\
$12 ~ "0/0" &&\
$15 ~ "0/0" &&\
$16 ~ "0/0" &&\
$11 ~ "1/1" &&\
$13 ~ "1/1" &&\
$14 ~ "1/1"\
) {print $7,$10,$11,$12,$13,$14,$15,$16} }' | less


grep -v "##" output_DN0.vcf | awk '{if(\
$10 ~ "0/0" &&\
$12 ~ "0/0" &&\
$15 ~ "0/0" &&\
$16 ~ "0/0" &&\
$11 ~ "1/1" &&\
$13 ~ "1/1" &&\
$14 ~ "1/1"\
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' | less


#REMOVE FILE NAME FROM CHR
grep -v "##" output_DN0.vcf | sed 's/fb_vcf.*vcf://g' | less
#Why does this not find the thing?
#Because in sed, * is single character, .* is string

#Use this for the individuals
sed 's/fb_vcf.*vcf://g' output_all.vcf > output_DN_all.vcf
#Use this for the all
sed 's/out.*vcf://g' output_all.vcf > output_DN_all.vcf


grep -v "##" output_DN_all.vcf | less
#MY OUTPUT ALL FILE HAS TEN HEADER LINES
cat -n output_DN_all.vcf | sort -uk2 | sort -n | cut -f2- > output_DN_lesshead.vcf

#1/1 AND 0/0 NO 0/1
#PHASING IS THE SAME
#This filtering also removes instances of missing data

#Sorted for both
grep "#" output_DN_lesshead.vcf > output_filter_1100.vcf
#Filtered one at a time to track which matches ref
grep "#" output_DN_lesshead.vcf > o_filter_Sim1_Sol0.vcf
grep "#" output_DN_lesshead.vcf > o_filter_Sim0_Sol1.vcf

#FIX TAB DELIMETER
grep "#" output_DN_lesshead.vcf > o_filter_Sim1_Sol0.vcf
awk 'BEGIN{FS=OFS="\t"}{if(\
$10 ~ "0/0" &&\
$12 ~ "0/0" &&\
$15 ~ "0/0" &&\
$16 ~ "0/0" &&\
$11 ~ "1/1" &&\
$13 ~ "1/1" &&\
$14 ~ "1/1"\
) {print} }' output_DN_all.vcf >> o_filter_Sim1_Sol0.vcf &

awk 'BEGIN{FS=OFS="\t"}{if(\
$10 ~ "1/1" &&\
$12 ~ "1/1" &&\
$15 ~ "1/1" &&\
$16 ~ "1/1" &&\
$11 ~ "0/0" &&\
$13 ~ "0/0" &&\
$14 ~ "0/0"\
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' output_DN_all.vcf >>  o_filter_Sim0_Sol1.vcf &

#PHASED
#Filtered one at a time to track which matches ref
grep "#" output_DN_lesshead.vcf > o_filter_Sim1_Sol0_phased.vcf
grep "#" output_DN_lesshead.vcf > o_filter_Sim0_Sol1_phased.vcf
grep "#" output_DN_lesshead.vcf > o_filter_Sim1_Sol0_phased_p.vcf
awk 'BEGIN{FS=OFS="\t"}{if(\
($10 ~ "0/0" || $10 ~ "0p0") &&\
($12 ~ "0/0" || $12 ~ "0p0") &&\
($15 ~ "0/0" || $15 ~ "0p0") &&\
($16 ~ "0/0" || $16 ~ "0p0") &&\
($11 ~ "1/1" || $11 ~ "1p1") &&\
($13 ~ "1/1" || $13 ~ "1p1") &&\
($14 ~ "1/1" || $14 ~ "1p1") \
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' output_all_unphased.vcf>> o_filter_Sim1_Sol0_phased_p.vcf

awk 'BEGIN{FS=OFS="\t"}{if(\
($10 ~ "1/1" || $10 ~ "1|1") &&\
($12 ~ "1/1" || $12 ~ "1|1") &&\
($15 ~ "1/1" || $15 ~ "1|1") &&\
($16 ~ "1/1" || $16 ~ "1|1") &&\
($11 ~ "0/0" || $11 ~ "0|0") &&\
($13 ~ "0/0" || $13 ~ "0|0") &&\
($14 ~ "0/0" || $14 ~ "0|0") \
) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' output_all_unphased.vcf >>  o_filter_Sim0_Sol1_phased.vcf

awk 'BEGIN{FS=OFS="\t"}{if(\
($10 ~ "1/1")\
) {print $1,$10} }' output_DN_all.vcf | less

grep -v "##" output_DN_all.vcf | wc -l
2815714 OR -v "#" 2815704
grep -v "##" output_DN_lesshead.vcf | wc -l
Expecting 2815705 YES
grep -v "##" output_filter_1100.vcf | wc -l
86025 OR -v "#" 86024

grep -v "##" o_filter_Sim1_Sol0_phased.vcf | wc -l
1619557
grep -v "##" o_filter_Sim0_Sol1_phased.vcf | wc -l
1406293
#ADDS TO MORE THAN THE TOTAL??
#THE | SEEMS TO ACT AS A WILD CARD

sed 's/[|]/p/g' output_DN_all.vcf > output_all_unphased.vcf
grep -v "##" o_filter_Sim1_Sol0_phased_p.vcf | wc -l
85955
#DOES NOT ADD ANYTHING - INFACT IM NOT SURE THERE ARE ANY

grep -v "##" o_filter_Sim1_Sol0.vcf | wc -l
85955
grep -v "##" o_filter_Sim0_Sol1.vcf | wc -l
71
#THIS MAKES SENSE, MOST SITES THE SIMILIS IS DIFFERENT AND SOL MATCHES

grep -v "##" output_filter_1100.vcf | less
grep -v "##" output_DN_all.vcf | less


#FILTER BY QUALITY OR OTHER METRICS
#How many are lost when minumum quality is 100
awk '{if($6 > 100) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' o_filter_Sim1_Sol0.vcf | wc -l
81550
#Not a big loss
awk '{if($6 > 30) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' o_filter_Sim1_Sol0.vcf | wc -l
85079
awk '{if($6 > 1000) {print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16} }' o_filter_Sim1_Sol0.vcf | wc -l
53421

bgzip -c o_filter_Sim1_Sol0.vcf > o_filter_Sim1_Sol0.vcf.gz
bcftools index o_filter_Sim1_Sol0.vcf.gz
bcftools stats --depth 1,2000,1 --samples-file samplelist.txt o_filter_Sim1_Sol0.vcf.gz  > o_filter_Sim1_Sol0.vcf.vchk 2> output_Sim1Sol0.stats.vchk.err

bcftools filter























##############################################################


#PREVIOUS WORK

sed 's/^.* fb_vcf/fb_*.vcf:
sed 's/foo/bar/g' hello.txt
sed 's/fb_vcf*:/bar/g' 

grep -v "##" output_DN0.vcf | sed 's/^.*fb_vcf*:/t/g' | less
grep -v "##" output_DN0.vcf |sed 's/fb_vcf.*vcf://g' | less


grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | head | less


grep -v "#" Sim6.g.vcf.gz | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }'  | less
| grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | less


less Sim6.g.vcf.gz |grep -v "#" | less | wc -l
7529777

less Sim4_chr_cat.g.vcf.gz | grep -v "#" | less | wc -l
1425924 
#APPEARS TO SHOW NO DIFFERENCE FROM REFERENCE


generate_plot.py -wd run_BUSCOiso_Solidissima_Mollusc

grep -v "#" Sim4.g.vcf | wc -l
416874
grep -v "#" Sim5.g.vcf | wc -l
3263157
grep -v "#" Sim6.g.vcf | wc -l
799007
#Rerun 4 and 6 because they were done without the java lines. 


grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | less
grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | grep "0/1" | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | wc -l
grep -v "#" Sim4.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | awk ' {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} ' | wc -l


#All	#0/0	#1/1	#0/1	#0|0	#1|1	#All without Q>100 filtering
31457	25495	1102	1300	104		1585	39666


################ RUN LINES #####################
grep -v "#" Sim.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' > Sim.test.vcf
grep "1/1" Sim.test.vcf | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' > Sim.filter.vcf
grep -v "#" Sol.g.vcf > Sol.test.vcf 

export OMP_NUM_THREADS=16

/programs//R-3.5.0s/bin/R
#install.packages("tidyverse")
library("tidyverse")
Sol <- read.table("Sol.test.vcf")
Sim <- read.table("Sim.filter.vcf")
Sim["V11"] = "P"

for (i in 1:nrow(Sol)) {
chrom <- Sol[i,1]
pos <- Sol[i,2]
for (j in 1:nrow(Sim)) {
if (Sim[j,1]==chrom & Sim[j,2]==pos) {
Sim[j,4] <- NA
}
}
}



#MISC NOTES OF THINGS THAT DIDNT WORK
# nohup ./HGH_bwa_aln.sh >& bwa_aln_all.log &
#bwa mem -M -t 18 -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA ${ACC}_clean_R1.fastq.gz  ${ACC}_clean_R2.fastq.gz > $ACC_i.sam
# | samtools view -Sb - > $ACC_i.bam
#4700.661 sec; CPU: 40764.924 sec
#Sim4
#Real time: 2791.894 sec; CPU: 46231.244 sec

# nohup at the beginning does not work for bwa mem
#SET WITHIN FUNCTION OR IT IGNORES INPUT

#QC RESULTS

#TRINITY QC
#BUSCO
cp /programs/busco-3.1.0/config/config.ini ./ 
export BUSCO_CONFIG_FILE=/workdir/hh693/config.ini 
export PYTHONPATH=/programs/busco-3.1.0/lib/python3.6/site-packages 
export PATH=/programs/busco-3.1.0/scripts:$PATH 
tar xvfz metazoa_odb10.tar.gz 

run_BUSCO.py --in ./Trinity_Solidissima.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out trinityBUSCO_Solidissima -f >& BUSCO_log_sol.log &
run_BUSCO.py --in ./Trinity_Similis.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out trinityBUSCO_Similis -f >& BUSCO_log_sim.log &


#!/usr/local/bin/python2.7.15
generate_plot.py -wd run_trinityBUSCO_Solidissima
generate_plot.py -wd run_trinityBUSCO_Similis
#If that doesnt work: generate_plot.py -wd run_trinityBUSCO
#graph still not working

#BUSCO WITH MOLLUSCA
run_BUSCO.py --in ./Trinity_Solidissima.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 12 --out mollusca_Solidissima -f >& logs/BUSCO_mollusca_sol_t2.log &
run_BUSCO.py --in ./Trinity_Similis.fasta --lineage_path ./db_ref/mollusca_odb10 --mode transcriptome --cpu 12 --out mollusca_Similis -f >& logs/BUSCO_mollucsa_sim_t2.log &
#DID NOT WORK
generate_plot.py -wd run_BUSCOmollusca_Solidissima &
generate_plot.py -wd run_BUSCOmollusca_Similis &

#BLASTX 
makeblastdb -in uniprot_sprot.fasta -dbtype prot
blastx -query ./trinity_out_Solidissima/Trinity.fasta -db uniprot_sprot.fasta -out blastx_Sol.outfmt6 -evalue 1e-20 -num_threads 8 -max_target_seqs 1 -outfmt 6 &
blastx -query ./trinity_out_Similis/Trinity.fasta -db uniprot_sprot.fasta -out blastx_sim.outfmt6 -evalue 1e-20 -num_threads 8 -max_target_seqs 1 -outfmt 6 &

export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol.outfmt6 Trinity_Solidissima.fasta db_ref/uniprot_sprot.fasta
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_sim.outfmt6 Trinity_Similis.fasta db_ref/uniprot_sprot.fasta

Sol
#hit_pct_cov_bin	count_in_bin	>bin_below
100	112	112
90	42	154
80	24	178
70	19	197
60	27	224
50	22	246
40	31	277
30	22	299
20	12	311
10	3	314

Sim
#hit_pct_cov_bin	count_in_bin	>bin_below
100	71	71
90	28	99
80	27	126
70	26	152
60	25	177
50	19	196
40	20	216
30	19	235
20	11	246
10	6	252

#GENERAL STATS
export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/TrinityStats.pl Trinity_Similis.fasta
################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':	158159
Total trinity transcripts:	314334
Percent GC: 35.51

########################################
Stats based on ALL transcript contigs:
########################################

	Contig N10: 6346
	Contig N20: 4502
	Contig N30: 3436
	Contig N40: 2694
	Contig N50: 2096

	Median contig length: 496
	Average contig: 1058.19
	Total assembled bases: 332626520


#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

	Contig N10: 5461
	Contig N20: 3618
	Contig N30: 2621
	Contig N40: 1900
	Contig N50: 1317

	Median contig length: 357
	Average contig: 730.24
	Total assembled bases: 115494084
	
$TRINITY_HOME/util/TrinityStats.pl Trinity_Solidissima.fasta
################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':	118827
Total trinity transcripts:	183124
Percent GC: 35.48

########################################
Stats based on ALL transcript contigs:
########################################

	Contig N10: 6394
	Contig N20: 4462
	Contig N30: 3362
	Contig N40: 2628
	Contig N50: 2031

	Median contig length: 450
	Average contig: 1002.18
	Total assembled bases: 183523677


#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

	Contig N10: 5030
	Contig N20: 3287
	Contig N30: 2369
	Contig N40: 1706
	Contig N50: 1188

	Median contig length: 348
	Average contig: 693.72
	Total assembled bases: 82433181



#TRANS DECODER
/programs/TransDecoder-v5.5.0/TransDecoder.LongOrfs -t Trinity_Solidissima.fasta >& log_trasdecoder_basic_Solp1.log &&
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Trinity_Solidissima.fasta >& log_trasdecoder_basic_Solp2.log &

/programs/TransDecoder-v5.5.0/TransDecoder.LongOrfs -t Trinity_Similis.fasta >& log_trasdecoder_basic_Simp1.log &&
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Trinity_Similis.fasta >& log_trasdecoder_basic_Simp2.log &

#Try this after first step
#/programs/hmmer/bin/hmmscan --cpu 2 --domtblout pfam.domtblout /workdir/hh693/P-fam-A.hmm ./Trinity_Solidissima.fasta.transdecoder_dir/longest_orfs.pep >& log_hmmscan_test.log &
#PfamA is empty


#CONVERT TO FASTA
bedtools getfasta -fi Trinity_Solidissima.fasta -bed Trinity_Solidissima.fasta.transdecoder.bed -fo Transd_Solidissima.fasta
bedtools getfasta -fi Trinity_Similis.fasta -bed Trinity_Similis.fasta.transdecoder.bed -fo Transd_Similis.fasta




#REPEAT QC WITH ISOFORM TRIMMED
export BUSCO_CONFIG_FILE=/workdir/hh693/config.ini 
export PYTHONPATH=/programs/busco-3.1.0/lib/python3.6/site-packages 
export PATH=/programs/busco-3.1.0/scripts:$PATH 
run_BUSCO.py --in ./Trinity_iso_Sol.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOiso_Solidissima -f >& BUSCO_iso_sol.log &
blastx -query ./Trinity_iso_Sol.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sol_iso.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &

generate_plot.py -wd run_BUSCOiso_Solidissima

export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol_iso.outfmt6 Trinity_iso_Sol.fasta db_ref/uniprot_sprot.fasta

#hit_pct_cov_bin	count_in_bin	>bin_below
100	12	12
90	10	22
80	5	27
70	3	30
60	3	33
50	8	41
40	5	46
30	8	54
20	5	59
10	3	62

$TRINITY_HOME/util/TrinityStats.pl Trinity_iso_Sol.fasta

################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':	118827
Total trinity transcripts:	118827
Percent GC: 35.49

########################################
Stats based on ALL transcript contigs:
########################################

	Contig N10: 5030
	Contig N20: 3287
	Contig N30: 2369
	Contig N40: 1706
	Contig N50: 1188

	Median contig length: 348
	Average contig: 693.72
	Total assembled bases: 82433181


#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

	Contig N10: 5030
	Contig N20: 3287
	Contig N30: 2369
	Contig N40: 1706
	Contig N50: 1188

	Median contig length: 348
	Average contig: 693.72
	Total assembled bases: 82433181




#REPEAT TRINITY QC WITH TRIMMED
run_BUSCO.py --in ./Transd_Solidissima.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOtransd_Solidissima -f >& BUSCO_td_sol.log &
run_BUSCO.py --in ./Transd_Similis.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOtransd_Similis -f >& BUSCO_td_sim.log &

generate_plot.py -wd run_BUSCOtransd_Solidissima
generate_plot.py -wd run_BUSCOtransd_Similis

blastx -query ./Transd_Solidissima.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sol_td.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &
blastx -query ./Transd_Similis.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sim_td.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &

export TRINITY_HOME=/programs/trinityrnaseq-v2.8.6
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sol_td.outfmt6 Transd_Solidissima.fasta db_ref/uniprot_sprot.fasta
#hit_pct_cov_bin	count_in_bin	>bin_below
100	119	119
90	67	186
80	47	233
70	28	261
60	29	290
50	49	339
40	37	376
30	49	425
20	44	469
10	15	484
$TRINITY_HOME/util/analyze_blastPlus_topHit_coverage.pl blastx_Sim_td.outfmt6 Transd_Similis.fasta db_ref/uniprot_sprot.fasta
#hit_pct_cov_bin	count_in_bin	>bin_below
100	88	88
90	43	131
80	26	157
70	26	183
60	27	210
50	20	230
40	29	259
30	23	282
20	18	300
10	12	312


$TRINITY_HOME/util/TrinityStats.pl Transd_Similis.fasta
################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':	24473
Total trinity transcripts:	77629
Percent GC: 37.43

########################################
Stats based on ALL transcript contigs:
########################################

	Contig N10: 8610
	Contig N20: 6511
	Contig N30: 5285
	Contig N40: 4381
	Contig N50: 3696

	Median contig length: 2105
	Average contig: 2653.41
	Total assembled bases: 205981945


#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

	Contig N10: 7655
	Contig N20: 5748
	Contig N30: 4600
	Contig N40: 3782
	Contig N50: 3143

	Median contig length: 1520
	Average contig: 2065.15
	Total assembled bases: 50540487
	
$TRINITY_HOME/util/TrinityStats.pl Transd_Solidissima.fasta
################################
## Counts of transcripts, etc.
################################
Total trinity 'genes':	22792
Total trinity transcripts:	47988
Percent GC: 37.45

########################################
Stats based on ALL transcript contigs:
########################################

	Contig N10: 8493
	Contig N20: 6423
	Contig N30: 5170
	Contig N40: 4275
	Contig N50: 3522

	Median contig length: 1765
	Average contig: 2354.96
	Total assembled bases: 113009595


#####################################################
## Stats based on ONLY LONGEST ISOFORM per 'GENE':
#####################################################

	Contig N10: 7033
	Contig N20: 5137
	Contig N30: 4016
	Contig N40: 3249
	Contig N50: 2670

	Median contig length: 1060.5
	Average contig: 1658.61
	Total assembled bases: 37802948









SAMPLES=(
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)

#IGNORED INPUT
for ACC in "${SAMPLES[@]}"; do
	echo "$ACC"
	nohup bwa mem -t 18  -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA ${ACC}_R1.fastq.gz ${ACC}_R2.fastq.gz | samtools view -Sb -@18 -o ${ACC}_iso_output.bam -
done


#MARK DUPLICATES
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

ACC=Sim4
SAM=Solidissima
REFFASTA=Sol_ref.fa

gatk MarkDuplicatesSpark \
-I ${ACC}_iso_output.bam \
-O ${ACC}.sorted.dedup.bam \
-M ${ACC}.sorted.dedup.txt \
--tmp-dir $TMP \
--conf "spark.executor.cores=8" \
>& sortdedup_${ACC}.log &





#HAPLOTYPE CALLER





#gatk MarkDuplicatesSpark -I Sim4_iso_output.bam -O Sim4_iso.sorted.dedup.bam -M Sim4_iso.sorted.dedup.txt >& sortdedup_Sim4.log &
	#WARNING: An illegal reflective access operation has occurred
	#WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/programs/gatk-4.1.4.0/gatk-package-4.1.4.0-local.jar) to method java.nio.Bits.unaligned()
	#WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
	#WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
	#WARNING: All illegal access operations will be denied in a future release

${ACC}_iso_output.bam

ACC=Sim4

gatk --java-options "-Xmx4g"  HaplotypeCaller \
    --tmp-dir $TMP \
     -R $REFFASTA \
     -I ${ACC}_iso_output.bam  \
     -ERC GVCF \
     --native-pair-hmm-threads 10 \
     --minimum-mapping-quality 30 \
     -O $ACC.g.vcf >& hc_$ACC.log &

gatk --java-options "-Xmx4g"  HaplotypeCaller \
     --tmp-dir $TMP \
     -R $REFFASTA \
     -I $ACC_iso_output.bam   \
     -ERC GVCF \
     --native-pair-hmm-threads 10 \
     --minimum-mapping-quality 30 \
     -O $ACC.g.vcf >& hc_$ACC.log &




#Struggling downline from bwa align. The output is incompatible with GATK
#Trying lots of different things (see below)

#Jun 19th, trying to run the code from the workshop



#PERL SCRIPT
chmod u+x extract_longest_from_trinity.sh
./extract_longest_from_trinity.sh trinity_out_Solidissima/Trinity.fasta > ./Trinity_Sol_longest.fasta
#Output was 296K, Input was 190M, very quick <2 min
./extract_longest_from_trinity.sh trinity_out_Similis/Trinity.fasta > ./Trinity_Sim_longest.fasta
#Output was 277K, Input was 349M, also quick
# wc -l Trinity_Sim_longest.fasta 
# 3513 Trinity_Sim_longest.fasta
# wc -l trinity_out_Similis/Trinity.fasta
# 628668 trinity_out_Similis/Trinity.fasta


#TRANS DECODER
/programs/TransDecoder-v5.5.0/TransDecoder.LongOrfs -t Trinity_Solidissima.fasta >& log_trasdecoder_basic_Solp1.log &&
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Trinity_Solidissima.fasta >& log_trasdecoder_basic_Solp2.log &

/programs/TransDecoder-v5.5.0/TransDecoder.LongOrfs -t Trinity_Similis.fasta >& log_trasdecoder_basic_Simp1.log &&
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Trinity_Similis.fasta >& log_trasdecoder_basic_Simp2.log &

#Try this after first step
#/programs/hmmer/bin/hmmscan --cpu 2 --domtblout pfam.domtblout /workdir/hh693/P-fam-A.hmm ./Trinity_Solidissima.fasta.transdecoder_dir/longest_orfs.pep >& log_hmmscan_test.log &
#PfamA is empty

#REPEAT TRINITY QC WITH TRIMMED
run_BUSCO.py --in ./Transd_Solidissima.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOtransd_Solidissima -f >& BUSCO_td_sol.log &
run_BUSCO.py --in ./Transd_Similis.fasta --lineage_path ./db_ref/metazoa_odb10 --mode transcriptome --cpu 8 --out BUSCOtransd_Similis -f >& BUSCO_td_sim.log &

generate_plot.py -wd run_BUSCOtransd_Solidissima
generate_plot.py -wd run_BUSCOtransd_Similis

blastx -query ./Transd_Solidissima.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sol_td.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &
blastx -query ./Transd_Similis.fasta -db ./db_ref/uniprot_sprot.fasta -out blastx_Sim_td.outfmt6 -evalue 1e-20 -num_threads 4 -max_target_seqs 1 -outfmt 6 &


#CONVERT TO FASTA
bedtools getfasta -fi Trinity_Solidissima.fasta -bed Trinity_Solidissima.fasta.transdecoder.bed -fo Transd_Solidissima.fasta
bedtools getfasta -fi Trinity_Similis.fasta -bed Trinity_Similis.fasta.transdecoder.bed -fo Transd_Similis.fasta



#BWA ALIGN
nohup ./HGH_bwa_aln.sh >& bwa_aln_all.log &

#Basic script code:
ACC=Sol6
SAM=Solidissima
REFFASTA=Sol_ref.fa

bwa mem -M -t 22 \
 -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 ${ACC}_clean_R1.fastq.gz  ${ACC}_clean_R2.fastq.gz \
 | samtools view -Sb - > $ACC_s.bam
 
ACC=Sol8...

#Should take less than 400 CPU minutes per sample
#FOR LOOP NOT WORKING, DO IT INDIVIDUALLY AS A SCRIPT
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)
SAM=Solidissima
REFFASTA=Sol_ref.fa
for ACC in "${SAMPLES[@]}"; do
	echo "$ACC"
	bwa mem -M -t 14 \
 		-R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 		${ACC}_clean_R1.fastq.gz  ${ACC}_clean_R2.fastq.gz \
 		| samtools view -Sb - > $ACC_t.bam >& bwa_aln_${ACC}_t.log
done
#PASTE IN ONE LINE AT A TIME (or maybe with no identations)
#_t stands for testing the for loop and doing them all at once. Sol6.bam and Sol6_t.bam should be identical
# no & at the end so it does not run them in parallel 

#Finished .bam files are about 5G
#Trying again on 7 threads because that's the main thing I changed between then and now,
#If that fails again, try doing it not in a script.
#Also possible that I did it in the past without .gz (yes), but looks like workshop did it with .gz but only 4 threads
#Maybe going too fast over two threads is causing it to duplicate headers
#gunzip -c maintains .gz file too


#Running bwa with 7 threads = _s.bam over night
nohup ./HGH_bwa_aln_s.sh >& bwa_aln_s.log &

#Did not save? or something, looked like it never made the .bam file.
#Now trying bwa_r which stands for raw. These raw reads were uncut by trimmomatic
#Compare how Sim6_R1 looks compared to Sim6_clean_R1
#They look the same to me...

#STILL NOT SAVING THE BAM FILES SOMETHING IS GOING WRONG


[[ $Sim6_R1.fastq.gz == $Sim6_clean_R1.fastq.gz ]] && echo yes
yes

#YUP
#its almost like the processes are getting interrupted when my computer disconnects from the server
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)
SAM=Solidissima
REFFASTA=Sol_ref.fa
for ACC in "${SAMPLES[@]}"; do
echo "$ACC"
bwa mem -M -t 7 \
-R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
${ACC}_R1.fastq.gz  ${ACC}_R2.fastq.gz \
| samtools view -Sb - > $ACC_r.bam
done

#With  >& bwa_aln_${ACC}_r.log   it kept not saving anything


SAMPLESB=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)
for ACCB in "${SAMPLESB[@]}"; do
gunzip -c ${ACCB}_clean_R1.fastq.gz > ${ACCB}_clean_R1.fastq
gunzip -c ${ACCB}_clean_R2.fastq.gz > ${ACCB}_clean_R2.fastq
done


#BWA INDEX
#MARK DUPLICATES AND HAPLOTYPE CALLER : CREATE SCRIPT
#INITIALIZE JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
#RUN INDEX
REFFASTA=./Sol_ref.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH

nohup ./HGH_sortdup_GATK.sh >& sort_GATK_all.log &
#DID NOT WORK

#It appears something in transdecoder is incompatible with 
#Nope, its the .bam file's fault.


A USER ERROR has occurred: Failed to read bam header from Sol6.bam
 Caused by:Cannot add sequence that already exists in SAMSequenceDictionary

#Try converting to .sam so I can remove bad headers
samtools view -h Sim6.bam > Sim6.sam &
samtools view -h Sim6.bam | less #You can view without converting to sam


#BWA INDEX
#INITIALIZE JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
#RUN INDEX
REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH
#DOES NOT WORK IN SCRIPT FOR SOME REASON
gatk MarkDuplicatesSpark \
            -I Sim4.bam \
            -O Sim4.sorted.dedup.bam \
            -M Sim4.sorted.dedup.txt >& sdedupi_Sim4.log &
#TAKES ABOUT 40 MINUTES WHEN 1 AT A TIME

#HAPLOTYPE CALLER
#HAPLOTYPE CALLER WITH GATK
#SET WITHIN FUNCTION OR IT IGNORES INPUT
#HAPLOTYPE CALL INDIVIDUALLY
#INITIALIZE JAVA
export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
#TMP=/workdir/$USER/TrimmedSeq/tmp
export PATH=$GATKDIR:$PATH
ACC=Sol
#mkdir tmpgatk$ACC

gatk --java-options "-Xmx4g"  HaplotypeCaller \
    --tmp-dir tmpgatk$ACC \
     -R $REFFASTA \
     -I $ACC.sorted.dedup.bam  \
     -ERC GVCF \
     --native-pair-hmm-threads 10 \
     --minimum-mapping-quality 30 \
     -O $ACC.g.vcf >& hc_$ACC.log &


#COMBINE GVCF




#FILTERING





#1/1 AND 0/0 NO 0/1
#PHASING IS THE SAME





#Excluding homology searching (IF it reduces total, if it increases include), predict ORFs

gunzip Pfam-A.hmm.gz
cp /shared_data/genome_db/BLAST_NCBI/swissprot* ./

#Try this after first step
hmmscan --cpu 8 --domtblout pfam.domtblout /path/to/Pfam-A.hmm transdecoder_dir/longest_orfs.pep



#THEN GO TO: https://github.com/TransDecoder/TransDecoder/wiki and download Pfam and upload with Filezilla
#gunzip Pfam-A.hmm.gz
#/programs/hmmer/bin/hmmconvert Pfam-A.hmm  >  ./Pfam/Pfam-A.hmm
#/programs/hmmer/bin/hmmpress ./Pfam/Pfam-A.hmm
#/programs/hmmer/bin/hmmscan --cpu 16 --domtblout pfam.domtblout ./Pfam/Pfam-A.hmm Solidis_Trinity.fasta.transdecoder_dir/longest_orfs.pep 
#/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Solidis_Trinity.fasta --retain_pfam_hits pfam.domtblout
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Solidis_Trinity.fasta
#EVERYTHING BUT HMM RUNS ON ONLY 100% CPU


#BBMAP NOTES

#BACKGROUND: EXTRA TRIM WITH HISTOGRAMS
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)

export PATH=/programs/bbmap-38.73:$PATH

for SAMPLE in "${SAMPLES[@]}"; do
	echo "$SAMPLE"
	bbduk.sh in1=$SAMPLE'_R1.fastq.gz' in2=$SAMPLE'_R2.fastq.gz' out1=$SAMPLE'_clean_Ex_R1.fastq.gz' out2=$SAMPLE'_clean_Ex_R2.fastq.gz' ref=/programs/bbmap-38.73/resources/adapters.fa maq=10 qtrim=r trimq=10 minlen=50 bhist=$SAMPLE'bhist.txt' qhist=$SAMPLE'qhist.txt' gchist=$SAMPLE'gchist.txt' aqhist=$SAMPLE'aqhist.txt' lhist=$SAMPLE'lhist.txt' gcbins=auto ktrim=r k=23 mink=11 hdist=1 tpe tbo >& $SAMPLE'_Extra_bbmap.log'
done




Ktrim is adapter trimming


(if your data is very low quality, you may wish to use more sensitive settings of hdist=2 k=21)
quality trimming: bbduk.sh in=reads.fq out=clean.fq qtrim=r trimq=10

quality filtering: bbduk.sh in=reads.fq out=clean.fq maq=10
This will discard reads with average quality below 10. If quality-trimming is enabled, the average quality will be calculated on the trimmed read.

Length filtering:
bbduk.sh in=reads.fq out=clean.fq qtrim=r trimq=10 minlen=100
This will discard reads shorter than 100bp after trimming to Q10. Alternatively, using “mlf=50” (minlengthfraction=50) would discard reads under 50% of their original length after trimming. Either of these flags apply to any trim operation, whether force-trim (ftr, ftl, ftm), quality-trimming (qtrim), or kmer-trimming (ktrim). “mlf” compares the final length after all trim operations to the initial length before any trim operations.

Histogram generation:
bbduk.sh in=reads.fq bhist=bhist.txt qhist=qhist.txt gchist=gchist.txt aqhist=aqhist.txt lhist=lhist.txt gcbins=auto
This will generate histograms of various aspects of the reads – base frequency, quality scores, gc content, average quality, and length. BBMap can generate even more histograms by using mapping information (such as quality accuracy and indel length); BBDuk can also generate these histograms if it is fed a sam file in which the cigar strings use = and X to denote match and mismatch.

Therkildsen: Trimmomatic sliding window approach to trim off the
rest of the read if the average sequence quality over any
four bases fell below 15


#TRIMMOMATIC
SAMPLES=(
    Sim4
    Sim5
    Sim6
    Sol10
    Sol8
    Sol7
    Sol6
)

for SAMPLE in "${SAMPLES[@]}"; do
    echo "$SAMPLE"
    java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 22 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3 MINLEN:30
done


#Trimmed nothing:
#LEADING TRAILING, NO MINLEN
for SAMPLE in "${SAMPLES[@]}"; do
    echo "$SAMPLE"
    java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3
done

#MINLEN:80				trim everything
    java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3 MINLEN:80
#MINIMAL PARAMETERS		keep everything
	java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10
#MINLEN:50				keep everthing
	 java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3 MINLEN:50



java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3 MINLEN:50
#TRY THE OTHER ONES
NexteraPE-PE.fa  TruSeq2-PE.fa  TruSeq2-SE.fa  TruSeq3-PE-2.fa  TruSeq3-PE.fa  TruSeq3-SE.fa

#TRUSEQ2
Input Read Pairs: 103618581 Both Surviving: 103578940 (99.96%) Forward Only Surviving: 39530 (0.04%) Reverse Only Surviving: 63 (0.00%) Dropped: 48 (0.00%)
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq2-PE.fa:2:30:10

#TRUSEQ3-2
Input Read Pairs: 43052885 Both Surviving: 43038007 (99.97%) Forward Only Surviving: 13625 (0.03%) Reverse Only Surviving: 1248 (0.00%) Dropped: 5 (0.00%)
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq3-PE-2.fa:2:30:10

#TRUSEQ3
Input Read Pairs: 103618581 Both Surviving: 103566192 (99.95%) Forward Only Surviving: 52383 (0.05%) Reverse Only Surviving: 0 (0.00%) Dropped: 6 (0.00%)
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq3-PE.fa:2:30:10


#NO ILLUMINACLIP
kept all
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq'  LEADING:3 TRAILING:3 MINLEN:30


#SEQUENCE LENGTH = 76





#NO NUMBERS AFTER ADAPTORS (DOES NOT RUN)



#Sol8
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_Trim_1P.fastq' $SAMPLE'_Trim_1U.fastq' $SAMPLE'_Trim_2P.fastq' $SAMPLE'_Trim_2U.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10:2:true LEADING:3 TRAILING:3 MINLEN:80


echo $SAMPLE'_R1.fastq.gz'




#PREPARE
mkdir /workdir/hh693
cd /workdir/hh693
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sol*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sim*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*ref* . &
cp /programs/trimmomatic/adapters/NexteraPE-PE.fa . &

SAMPLELIST=(Sol8)

#TRIMMOMATIC
for SAMPLE in ${SAMPLELIST[@]} 
do
echo $SAMPLE
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_AdapterClipped_F_paired.fastq' $SAMPLE'_AdapterClipped_F_unpaired.fastq' $SAMPLE'_AdapterClipped_R_paired.fastq' $SAMPLE'_AdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10
done
#REMOVED FRONT END ADAPTERS ON MOST
Input Read Pairs: 43052885 Both Surviving: 43052759 (100.00%) Forward Only Surviving: 126 (0.00%) Reverse Only Surviving: 0 (0.00%) Dropped: 0 (0.00%)
#NOT WORKING ON A LATER DATE


#TRANSDECODER
/programs/TransDecoder-v5.5.0/TransDecoder.LongOrfs -t Solidis_Trinity.fasta
cp /shared_data/genome_db/BLAST_NCBI/swissprot* ./
#THEN GO TO: https://github.com/TransDecoder/TransDecoder/wiki and download Pfam and upload with Filezilla
#gunzip Pfam-A.hmm.gz
#/programs/hmmer/bin/hmmconvert Pfam-A.hmm  >  ./Pfam/Pfam-A.hmm
#/programs/hmmer/bin/hmmpress ./Pfam/Pfam-A.hmm
#/programs/hmmer/bin/hmmscan --cpu 16 --domtblout pfam.domtblout ./Pfam/Pfam-A.hmm Solidis_Trinity.fasta.transdecoder_dir/longest_orfs.pep 
#/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Solidis_Trinity.fasta --retain_pfam_hits pfam.domtblout
/programs/TransDecoder-v5.5.0/TransDecoder.Predict -t Solidis_Trinity.fasta
#EVERYTHING BUT HMM RUNS ON ONLY 100% CPU

#BWA PREPARE REF
#Needed for later gatk steps
#Set program path
TMP=/workdir/$USER/tmp
GATKDIR=/programs/gatk-4.1.4.0
export PATH=$GATKDIR:$PATH
gatk CreateSequenceDictionary -R Sol_trim_ref.fa  -O Sol_trim_ref.dict
samtools faidx Sol_trim_ref.fa
#Index for BWA alignment
bwa index Sol_trim_ref.fa

#RENAME FILES
#Did manually (i.e. messy), see below to copy most
#Next time make the trim output already .gz (andor named well)
#chmod u=rwx,g=rx,o=r HGH_bwa_aln_NoPf.sh

#NUMERICAL NOTES
#Without Pfam Ref.fa > 216M to 78M
#However, it does look like everything else scaled off that
#I'm just worried that the headers in the .vcf for position will look insane.

#Previously the .bam for all Sim and all Sol together were each about 30 G
#Right now, about 18 min in to the first one it is at about 3G, so if each is ~10
#Then each will take an hour, I have 7 of them.
#Check previous time for bwa algn to complete: 

-rw-rw-r--  1 hh693 hh693 6.5M May 27 00:16 Sol_trim_ref_NoPf.dict
-rw-rw-r--  1 hh693 hh693  78M May 27 00:13 Sol_trim_ref_NoPf.fa
-rw-rw-r--  1 hh693 hh693   17 May 27 00:18 Sol_trim_ref_NoPf.fa.amb
-rw-rw-r--  1 hh693 hh693 8.9M May 27 00:18 Sol_trim_ref_NoPf.fa.ann
-rw-rw-r--  1 hh693 hh693  69M May 27 00:18 Sol_trim_ref_NoPf.fa.bwt
-rw-rw-r--  1 hh693 hh693 2.4M May 27 00:16 Sol_trim_ref_NoPf.fa.fai
-rw-rw-r--  1 hh693 hh693  18M May 27 00:18 Sol_trim_ref_NoPf.fa.pac


-rw-rw-r--  1 hh693 hh693  21M May 26 23:09 Solidis_ref.dict
-rw-rw-r--  1 hh693 hh693 216M May 26 23:09 Solidis_ref.fa
-rw-rw-r--  1 hh693 hh693   19 May 26 23:09 Solidis_ref.fa.amb
-rw-rw-r--  1 hh693 hh693  18M May 26 23:09 Solidis_ref.fa.ann
-rw-rw-r--  1 hh693 hh693 201M May 26 23:09 Solidis_ref.fa.bwt
-rw-rw-r--  1 hh693 hh693 8.1M May 26 23:09 Solidis_ref.fa.fai
-rw-r--r--  1 hh693 hh693 372M May 26 23:09 Solidis_ref.fa.img
-rw-rw-r--  1 hh693 hh693  51M May 26 23:09 Solidis_ref.fa.pac
-rw-rw-r--  1 hh693 hh693 101M May 26 23:09 Solidis_ref.fa.sa


grep "1/1" Sol7.test.vcf | wc -l
19324
grep "0/1" Sol7.test.vcf | wc -l
27334
grep "0/0" Sol7.test.vcf | wc -l
1463913
grep "0|0" Sol7.test.vcf | wc -l
2120
grep "1|1" Sol7.test.vcf | wc -l
17832




REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
mkdir tmpcombTEST
export PATH=$GATKDIR:$PATH
gatk CombineGVCFs --tmp-dir tmpcombTEST -R $REFFASTA --variant Sol8.g.vcf --variant Sol10.g.vcf -O alltest.g.vcf 


export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH


cp -r /programs/spark-2.2.1-bin-hadoop2.7  /workdir/spark


export JAVA_HOME=/usr/local/jdk1.8.0_121
export PATH=$JAVA_HOME/bin:$PATH
REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
mkdir tmpSol10b
export PATH=$GATKDIR:$PATH
ACC=Sol10
#mkdir tmpgatk$ACC

gatk --java-options "-Xmx4g"  HaplotypeCaller \
    --tmp-dir tmpSol10b \
     -R $REFFASTA \
     -I $ACC.sorted.dedup.bam  \
     -ERC GVCF \
     --native-pair-hmm-threads 10 \
     --minimum-mapping-quality 30 \
     -O $ACC.g.vcf >& hc_$ACC.log &


REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH
gatk MarkDuplicatesSpark -I Sim4.bam -O Sim4.sorted.dedup.bam -M Sim4.sorted.dedup.txt >& sdedupi_Sim4.log && 
gatk MarkDuplicatesSpark -I Sim5.bam -O Sim5.sorted.dedup.bam -M Sim5.sorted.dedup.txt >& sdedupi_Sim5.log & 
gatk MarkDuplicatesSpark -I Sim6.bam -O Sim6.sorted.dedup.bam -M Sim6.sorted.dedup.txt >& sdedupi_Sim6.log 
echo "done (probably)"


gatk MarkDuplicatesSpark \
            -I Sol10.bam \
            -O Sol10.sorted.dedup.bam \
            -M Sol10.sorted.dedup.txt >& sdedupi_Sol10.log &

Sol10 did not have index
REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH
#DOES NOT WORK IN SCRIPT FOR SOME REASON
gatk MarkDuplicatesSpark \
            -I Sol6.bam \
            -O Sol6.sorted.dedup.bam \
            -M Sol6.sorted.dedup.txt >& sdedupi_Sol6.log &




REFFASTA=./Sol_trim_ref_NoPf.fa
GATKDIR=/programs/gatk-4.1.4.0
TMP=/workdir/$USER/tmp
export PATH=$GATKDIR:$PATH
#DOES NOT WORK IN SCRIPT FOR SOME REASON
gatk MarkDuplicatesSpark \
            -I Sol6.bam \
            -O Sol6.sorted.dedup.bam \
            -M Sol6.sorted.dedup.txt >& sdedupi_Sol6.log &


gatk MarkDuplicatesSpark \
            -I ${ACC}.bam \
            -O ${ACC}.sorted.dedup.bam \
            -M ${ACC}.sorted.dedup.txt \
            --tmp-dir $TMP \ 					<- ?
            --conf 'spark.executor.cores=8'     <- ?
            
gatk MarkDuplicatesSpark \
 	-I Sim.bam \ 
	-O Sim.sorted.dedup.bam \ 
	-M Sim.sorted.dedup.metrics.txt &


#Set ACC within .sh
#nohup ./HGH_bwa_aln.sh >& ./logs/bwa_aln_Sol6.log &
#Ran manually, not script cause it said "ignored input"

ACC=Sol6
SAM=Solidissima
REFFASTA=Sol_trim_ref_NoPf.fa

bwa mem -M -t 7 \
 -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 ${ACC}_R1.fastq  ${ACC}_R2.fastq \
 | samtools view -Sb - > $ACC.bam &



bwa mem -M -t 7 \
 -R "@RG\tID:Sol8\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 Sol8_R1.fastq  Sol8_R2.fastq \
 | samtools view -Sb - > Sol8.bam &

bwa mem -M -t 7 \
 -R "@RG\tID:Sol10\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 Sol10_R1.fastq  Sol10_R2.fastq \
 | samtools view -Sb - > Sol10.bam &

#Looks like it is working, but log is not being saved 
#Try next time to do >& bwa_align_$ACC.log


bwa mem -M -t 7 \
 -R "@RG\tID:Sim4\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 Sim4_R1.fastq.gz  Sim4_R2.fastq.gz \
 | samtools view -Sb - > Sim4.bam &

bwa mem -M -t 7 \
 -R "@RG\tID:Sim6\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 Sim6_R1.fastq  Sim6_R2.fastq \
 | samtools view -Sb - > Sim6.bam &


bwa mem -M -t 7 \
 -R "@RG\tID:Sim5\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 Sim5_R1.fastq  Sim5_R2.fastq \
 | samtools view -Sb - > Sim5.bam

cd TrimmedSeq
cp * ../
gzip *fastq*
#GZIP KEEPS ORIGINAL TOO







[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sim5g_ATTACTCG_GCCTCTAT_AdapterClipped_R_paired.fastq Sim5_R2.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sim6g_ATTACTCG_AGGATAGG_AdapterClipped_F_paired.fastq Sim6_R1.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sim6g_ATTACTCG_AGGATAGG_AdapterClipped_R_paired.fastq Sim6_R2.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_AdapterClipped_F_paired.fastq Sol10_R1.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_AdapterClipped_R_paired.fastq Sol10_R2.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol6g_ATTACTCG_TCAGAGCC_AdapterClipped_F_paired.fastq Sol6_R1.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol6g_ATTACTCG_TCAGAGCC_AdapterClipped_R_paired.fastq Sol6_R2.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol7g_ATTACTCG_CTTCGCCT_AdapterClipped_F_paired.fastq Sol7_R1.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol7g_ATTACTCG_CTTCGCCT_AdapterClipped_R_paired.fastq Sol7_R2.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol8g_ATTACTCG_TAAGATTA_AdapterClipped_F_paired.fastq Sol8_R1.fastq
[hh693@cbsumm06 TrimmedSeq]$ mv 10975_5776_103466_HVGNYBGXB_10418659_Sol8g_ATTACTCG_TAAGATTA_AdapterClipped_R_paired.fastq Sol8_R2.fastq


gatk CreateSequenceDictionary -R Sol_trim_ref_NoPf.fa  -O Sol_trim_ref_NoPf.dict
samtools faidx Sol_trim_ref.fa
#Index for BWA alignment
bwa index Sol_trim_ref.fa





#Use hmmpress first?
/programs/hmmer/bin/hmmconvert Pfam-A.hmm  >  ./Pfam/Pfam-A.hmm

/programs/hmmer/bin/hmmscan --cpu 16 --domtblout pfam.domtblout ./Pfam-A.hmm Solidis_Trinity.fasta.transdecoder_dir/longest_orfs.pep 



/programs/hmmer/bin/hmmscan

#After 50 minutes of running hmmscan: it is on DN481/DN78000 = 0.6% but also it'a jumping around so I'm not so sure about that



wget ftp://ftp.sanger.ac.uk/pub/databases/Pfam/current_release/Pfam-A.hmm.gz
cp /shared_data/genome_db/BLAST_NCBI/swissprot* ./

hmmscan --cpu 16 --domtblout pfam.domtblout /path/to/Pfam-A.hmm transdecoder_dir/longest_orfs.pep


#INDEX OUT OF BOUNDS: java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 8 -phred33 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_AdapterClipped_F_paired.fastq' $SAMPLE'_AdapterClipped_F_unpaired.fastq' $SAMPLE'_AdapterClipped_R_paired.fastq' $SAMPLE'_AdapterClipped_R_unpaired.fastq' ILLUMINACLIP:NexteraPE-PE.fa MINLEN:80

#WITH ANY LEVEL OF MIN LENGTH, IT DROPS ALL READS 
#MINLENGTH 2 KEPT ALL 
#WORKING BETTER LATER UP TO 40 (80 STILL DID NOT WORK)


mkdir TrimmedSeq
mv *_Ad*_paired* ./TrimmedSeq
mv *unpaired* ./Unpaired





SAMPLE='10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG'
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R1.fastq.gz 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R2.fastq.gz $SAMPLE'_MINAdapterClipped_F_paired.fastq' $SAMPLE'_MINAdapterClipped_F_unpaired.fastq' $SAMPLE'_MINAdapterClipped_R_paired.fastq' $SAMPLE'_MINAdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10 MINLEN:20

java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R1.fastq.gz 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R2.fastq.gz $SAMPLE'_MINAdapterClipped_F_paired.fastq' $SAMPLE'_MINAdapterClipped_F_unpaired.fastq' $SAMPLE'_MINAdapterClipped_R_paired.fastq' $SAMPLE'_MINAdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10 MINLEN:40

for $SAMPLE in ${test_array[@]} ; do echo $SAMPLE; done

for SOL in ${SAMPLELISTSOL[@]} 
do
echo $SAMPLE
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SOL'_R1.fastq.gz' $SOL'_R2.fastq.gz' $SOL'_AdapterClipped_F_paired.fastq' $SOL'_AdapterClipped_F_unpaired.fastq' $SOL'_AdapterClipped_R_paired.fastq' $SOL'_AdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10 
done


for SAMPLE in ${SAMPLELIST[@]} 
do
echo $SAMPLE
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 10 $SAMPLE'_R1.fastq.gz' $SAMPLE'_R2.fastq.gz' $SAMPLE'_AdapterClipped_F_paired.fastq' $SAMPLE'_AdapterClipped_F_unpaired.fastq' $SAMPLE'_AdapterClipped_R_paired.fastq' $SAMPLE'_AdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10
done



#PREPARE
cd /workdir/hh693
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sol*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sim*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*ref* .&
cp /programs/trimmomatic/adapters/NexteraPE-PE.fa . &
nohup ./HGH_Trimmomatic.sh SimSampleList.txt TrimmedSeq >& TrimmomaticSimPhed0518.log &


nohup ./HGH_Trimmomatic.sh SolSampleList.txt TrimmedSeq >& TrimmomaticSolPhed0518.log &





##Trimmommatic

#!/bin/bash

# A subset of the commands used in the pipeline described in Therkildsen and Palumbi: "Practical low-coverage genome-wide sequencing of hundreds of individually barcoded samples for population and evolutionary genomics in non-model species" published in Molecular Ecology Resources.
# usage: nohup ./Trimmomatic_mph.sh SAMPLELIST OUTPUTDIR >& NYC_trimmomatic.log &

SAMPLELIST=$1 # Filename and path to list of fastq file base names (remove _R1.fastq.gz) e.g. /workdir/mphwork/NYC_WGS_samples.txt
OUTPUTDIR=$2 # path to directory where output files are to be written, e.g. /workdir/mphwork/trimmed
##ADAPTERS=$3 # /workdir/Cod/ReferenceSeqs/NexteraPE_NT.fa is a list of adapter/index sequences for Nextera DNA and Nextera XT PE libraries

##### RUN EACH SAMPLE THROUGH PIPELINE #######
# Loop over each sample
for SAMPLEFILE in `cat $SAMPLELIST | cut -f1`; do
SAMPLE=`grep "$SAMPLEFILE" $SAMPLELIST | cut -d "_" -f9-10`
SAMPLE=$OUTPUTDIR$SAMPLE'_1'

#### CLEANING THE READS ####
# Remove adapter sequence with Trimmomatic, minlength=80. 
java -jar /programs/trimmomatic/trimmomatic-0.36.jar PE -threads 22 -phred33 $SAMPLEFILE'_R1.fastq.gz' $SAMPLEFILE'_R2.fastq.gz' $SAMPLE'_AdapterClipped_F_paired.fastq' $SAMPLE'_AdapterClipped_F_unpaired.fastq' $SAMPLE'_AdapterClipped_R_paired.fastq' $SAMPLE'_AdapterClipped_R_unpaired.fastq' ILLUMINACLIP:/programs/trimmomatic/adapters/NexteraPE-PE.fa:2:30:10 MINLEN:80
done




#May 18th 2020
Filter before I BWA prepare
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sol*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sim*fastq* . &


/programs/cd-hit-v4.6.8-2017-1208/cd-hit-est -o cdhit -c 0.9 -i Solidis_Filter.fasta -p 1 -d 0 -T 0 &
mv cdhit Sol_cdhit_ref.fa
./HGH_prepare_genome_GATK.sh >& prepare_genome.log &





java -jar /programs/trimmomatic/trimmomatic-0.39.jar [your_options_here]

Common adapter files are in /programs/trimmomatic/adapters. To run ILLUMINACLIP you will need to specify the path. ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq3-PE-2.fa:2:30:10 E.g.(you need to change the minimum kept read legth MINLEN):

Palindrome mode (cleaner, short reads with adapters are all included in unpaired_1.fastq, not in paired files):
java -jar /programs/trimmomatic/trimmomatic-0.39.jar PE -phred33 paired_end_reads_1.fastq paired_end_reads_2.fastq kept_paired_end_reads_1.fastq unpaired_1.fastq kept_paired_end_reads_2.fastq  unpaired_2.fastq ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq3-PE-2.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:200

Simple mode:
java -jar /programs/trimmomatic/trimmomatic-0.39.jar PE -phred33 paired_end_reads_1.fastq paired_end_reads_2.fastq kept_paired_end_reads_1.fastq unpaired_1.fastq kept_paired_end_reads_2.fastq  unpaired_2.fastq ILLUMINACLIP:/programs/trimmomatic/adapters/TruSeq3-SE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:200






# c = 0.9
# b = default

#Then do BWA prepare genome



#Filtering Transcriptome May 10th

cp /home/mph75_0001/shared/Hannah/May2020_workdir/*ref* .
cp Solidis_ref.fa ./Solidis_filtertest.fa

/programs/cd-hit-v4.6.8-2017-1208/cd-hit -h
/programs/cd-hit-v4.6.8-2017-1208/cd-hit-est -o cdhit -c 0.98 -i Solidis_filtertest.fa -p 1 -d 0 -b 3 -T 0
#WHY: CD-HIT can be used to cluster highly similar sequences and retain a single representative sequence per group. Stringent clustering can be done like so

#Code completed in about 15 minutes
#Created two files: cdhit and cdhit.clstr
#cdhit looks like the ref.fa
#cdhit.clstr is a list of which contigs go together?

wc -l Solidis_ref.fa
#355,144 Solidis_ref.fa

wc -l cdhit
# 327,990 cdhit

#Not much filtering but some.

#Set up for bam, get rid of others
mv ./*Sol* ./OldGenomes/
mv cdhit Sol_cdhit_ref.fa
 
 
#Align to Transcriptome
#Prepare transcriptome

bwa index -p Sol_cdhit_Transcriptome Sol_cdhit_ref.fa &
#Takes about 8 minutes on the 8 cpu

#Import fastq files
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sol*fastq* . &
cp /home/mph75_0001/shared/Hannah/Trials_previous_MarkerDevelopment/Mar2020_workingdir/*Sim*fastq* . &
#Takes time to copy

#Import scripts from previous work
#HGH_bwa_aln.sh
#HGH_prepare_genome_GATK.sh

chmod u=rwx,g=rx,o=r HGH_prepare_genome_GATK.sh
chmod u=rwx,g=rx,o=r HGH_bwa_aln.sh

./HGH_prepare_genome_GATK.sh >& prepare_genome.log &

#Sim 4 and Sol 10 done first, Sim5, Sol 6
#Rename for simplicity
mv 10975_5776_103466_HVGNYBGXB_10418659_Sim4g_ATTACTCG_AGGCTATA_R1.fastq.gz ./Sim4_R1.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sim4g_ATTACTCG_AGGCTATA_R2.fastq.gz ./Sim4_R2.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R1.fastq.gz ./Sol10_R1.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol10g_ATTACTCG_ACGTCCTG_R2.fastq.gz ./Sol10_R2.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sim5g_ATTACTCG_GCCTCTAT_R1.fastq.gz ./Sim5_R1.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sim5g_ATTACTCG_GCCTCTAT_R2.fastq.gz ./Sim5_R2.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol6g_ATTACTCG_TCAGAGCC_R1.fastq.gz ./Sol6_R1.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol6g_ATTACTCG_TCAGAGCC_R2.fastq.gz ./Sol6_R2.fastq.gz

#Finished processing later
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol7g_ATTACTCG_CTTCGCCT_R1.fastq.gz ./Sol7_R1.fastq.gz
mv 10975_5776_103466_HVGNYBGXB_10418659_Sol7g_ATTACTCG_CTTCGCCT_R2.fastq.gz ./Sol7_R2.fastq.gz


#First try saving as log.


#Run bwa align for one at a time
#Run in a for loop to step away:

################## FOR LOOP FOR RUNNING MULTIPLE BWA ALIGN IN A ROW ##############

#Put all ACC in one vector as strings, then run For Loop
declare -a ACCS=("Sim3" "Sol8" "Sim19")

for A in ${ACCS[@]}
do
ACKY=$A
echo $ACKY "begin"

ACC=$ACKY
SAM=Solidissima
REFFASTA=Sol_cdhit_ref.fa

bwa mem -M -t 7 \
 -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 ${ACC}_R1.fastq.gz  ${ACC}_R2.fastq.gz \
 | samtools view -Sb - > $ACC.bam >& bwa_align_$ACC.log

echo $ACKY "completed"

done








#Set ACC within .sh
#nohup ./HGH_bwa_aln.sh >& ./logs/bwa_aln_Sol6.log &
#Ran manually, not script cause it said "ignored input"

ACC=Sol6
SAM=Solidissima
REFFASTA=Sol_cdhit_ref.fa

bwa mem -M -t 7 \
 -R "@RG\tID:${ACC}\tSM:${SAM}\tLB:${SAM}\tPL:ILLUMINA" $REFFASTA \
 ${ACC}_R1.fastq.gz  ${ACC}_R2.fastq.gz \
 | samtools view -Sb - > $ACC.bam


#Looks like it is working, but log is not being saved 

#Try next time to do >& bwa_align_$ACC.log

#What do I do 






################ RUN LINES #####################
grep -v "#" Sim.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' > Sim.test.vcf
grep "1/1" Sim.test.vcf | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' > Sim.filter.vcf
grep -v "#" Sol.g.vcf > Sol.test.vcf 

export OMP_NUM_THREADS=16

/programs//R-3.5.0s/bin/R
#install.packages("tidyverse")
library("tidyverse")
Sol <- read.table("Sol.test.vcf")
Sim <- read.table("Sim.filter.vcf")
Sim["V11"] = "P"

for (i in 1:nrow(Sol)) {
chrom <- Sol[i,1]
pos <- Sol[i,2]
for (j in 1:nrow(Sim)) {
if (Sim[j,1]==chrom & Sim[j,2]==pos) {
Sim[j,4] <- NA
}
}
}






#Filtering take two: May 2020

############# Testing Lines ################

grep -v "#" Sim.g.vcf > Sim.test.vcf
head Sim.test.vcf

#Prints the columns in order
grep -v "#" Sim.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | tail
#Save that
grep -v "#" Sim.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' > Sim.test.vcf


wc -l Sim.g.vcf
7046542 Sim.g.vcf
wc -l Sim.test.vcf
6868878 Sim.test.vcf

grep "1/1" Sim.test.vcf | wc -l

#get both phased and unphased
grep "1/1\|1|1" Sim.test.vcf | wc -l   
		410182 = 1/1 + 1|1


	0/0 		5,900,698
	1/1			172045
	0/1			280143
	1/0			0
	0|0			18462 (?)
	1|1			238137

#I CAN include that phased BUT all the phased have an additional phase/genotype on the same
#	line that is 1|0 so they are not really homozygous. Could be an artifact of the process
#	but better to not include them I think.

#Filter by quality

grep "1/1\|1|1" Sim.test.vcf | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | head 

#Is filtering by Q >100 doing anything?
grep "1/1" Sim.test.vcf | wc -l
172045

grep "1/1" Sim.test.vcf | awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' | wc -l
151190

#Yes filtering by Quality is doing something

awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' Sim.filtered2.vcf | head
awk -F "," '{if($3>100) {print} }' Sim.filtered2.vcf | awk '{{print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1}}' > Sim.filtered3.vcf


#Filter against the Solidissima Lines
#Prepare Solidissima, looking for anything that is different from the reference.
#Why would there even be 0/0s? <- Bad reads?
#We do not want to filter anything out
grep -v "#" Sol.g.vcf | awk '{ {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' > Sol.test.vcf 

#DONT PRINT IN FANCY ORDER
grep -v "#" Sol.g.vcf > Sol.test.vcf 

#Compare the two based on position. 
#Try using new program: Bedtools

export PATH=/programs/bedtools2-2.29.2/bin:$PATH
#Bedtools is expecting integer values for chromosomes

#Starting in R
/programs//R-3.5.0s/bin/R
install.packages("tidyverse")
library("tidyverse")
#install.packages("vcfR") #May not be needed
Sol <- read.table("Sol.test.vcf")
Sim <- read.table("Sim.filter.vcf")

> nrow(Sol)
[1] 3,833,767
> nrow(Sim)
[1] 151,190

Sol <- as.data.frame(Sol)
Sim <- as.data.frame(Sim)
#Chromosome (column 1 has a lot of extra data in it "Levels" but it does not affect what
I am doing here)

#Time this takes to run before its ecen doing anything: more than 5 minutes
#Took 4 minutes running on 18 threads
#How to get R to run on multiple CPU
for (i in 1:nrow(Sol)) {chrom <- Sol[i,1]
pos <- Sol[i,2]}

#Prior to starting R do the following:
export OMP_NUM_THREADS=16

#So quit R with q() and then that and then restart and do:
/programs//R-3.5.0s/bin/R
library("tidyverse")
Sol <- read.table("Sol.test.vcf")
Sim <- read.table("Sim.filter.vcf")
Sim["V11"] = "P"

#Test
for (i in 1:100) {
chrom <- Sol[i,1]
pos <- Sol[i,2]
for (j in 1:100) {
if (Sim[j,1]==chrom & Sim[j,2]==pos) {
Sim[j,4] <- NA
}
}
}

for (i in 1:nrow(Sol)) {
chrom <- Sol[i,1]
pos <- Sol[i,2]
if (check.integer(i/10000)) {print(i)}
for (j in 1:nrow(Sim)) {
if (Sim[j,1]==chrom & Sim[j,2]==pos) {
Sim[j,4] <- NA
print(Sim[j,4])
}
}
}

check.integer <- function(N){
    !grepl("[^[:digit:]]", format(N,  digits = 20, scientific = FALSE))
}

#Said that trying to insert "F" didn't work so I just put in NA
#Piping with >%> doesn't seem to work
#Doesn't look like its running on 16, but only 4 are available so I think/hope it was
#Next time insert a progress checker:
if (is.integer(i/10000)) {print(i)}
#and
print(Sim[j,4]) #after turning it NA





#April 2020
#Code for filtering
grep "#" Sim.g.vcf > Sim.test.vcf
grep -v "#" Sim.subset.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' | tail
wc -l Sim.g.vcf
7,046,542 Sim.g.vcf
wc -l Sim.testplus.vcf 
6868878 Sim.testplus.vcf
Remove from grep #
grep -v "#" Sim.g.vcf | awk '{ {print $10,$1,$2,$3,$4,$5,$6,$7,$8,$9} }' > Sim.testplus.vcf
-v is remove
Sometimes is it 0|0? Yes. What is the difference between / and |, phased vs unphased
grep "0/0" Sim.testplus.vcf | wc -l
5900698
wc -l Sim.filtered3.vcf
5,169,980 Sim.filtered3.vcf
grep "0|0" Sim.testplus.vcf | wc -l
18462
They are the different types of data. For simplicity, which is most similar to theirs 
from the powerpoint? The first kind.
# SHOULD IT BE 1/1? YES
grep "0/0" Sim.testplus.vcf > Sim.filtered2.vcf
awk '{if($3>100) {print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1} }' Sim.filtered2.vcf | head
awk -F "," '{if($3>100) {print} }' Sim.filtered2.vcf | awk '{{print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1}}' > Sim.filtered3.vcf
awk -F "," '{if($3>100) {print} }' Sim.filtered2.vcf | awk '{{print $2,$3,$4,$5,$6,$7,$8,$9,$10,$1}}' | head



Filter Sol with Sim pieces
awk '{print $1, $2}' Sim.filtered3.vcf | head
grep -v "#" Sim.g.vcf | awk '{{print}}' > Sol.testplus.vcf

awk '{print $1, $2}' Sim.filtered3.vcf > Sim.filter.index.vcf



Sub2 Test
head Sol.testplus.vcf > Sol.sub2.vcf
awk '{print $1, $2}' Sim.filtered3.vcf | head > Sim.sub2.vcf


Sim.sub2.vcf | for i in $(cat); do
    echo "$i"
done

while IFS='' read -r LINE || [ -n "${LINE}" ]; do
    echo "${LINE}"
    grep "${LINE}" Sol.sub2.vcf | awk '{print}'
done < Sim.sub2.vcf 

while IFS='' read -r LINE || [ -n "${LINE}" ]; do
echo ${LINE}
echo ${LINE} | cut -d " " --f 1
echo ${LINE} | cut -d " " --f 2
echo a
echo b
awk '{if($1==a && $2==b) {print} }' Sol.sub2.vcf
done < Sim.sub2.vcf 






while IFS='' read -r LINE || [ -n "${LINE}" ]; do
echo ${LINE}
echo "${LINE}" | cut -d " " --f 1 > a.txt
echo "${LINE}" | cut -d " " --f 2 > b.txt
awk '{if($1== && $2==b.txt) {print} }' Sol.sub2.vcf
done < Sim.sub2.vcf 



while IFS='' read -r LINE || [ -n "${LINE}" ]; do
echo ${LINE}
cut -d " " --f 1 "${LINE}" 
cut -d " " --f 2 "${LINE}"
awk '{if($1== cut -d " " --f 1 "${LINE}"  && $2==cut -d " " --f 2 "${LINE}") {print} }' Sol.sub2.vcf
done < Sim.sub2.vcf 



